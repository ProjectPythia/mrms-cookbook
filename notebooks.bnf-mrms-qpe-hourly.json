{"version":2,"kind":"Notebook","sha256":"1d42cd6d6df2e337f8ec3fe66481f313664e4b2695c710c18ef01d6faff828db","slug":"notebooks.bnf-mrms-qpe-hourly","location":"/notebooks/bnf-mrms-qpe-hourly.ipynb","dependencies":[],"frontmatter":{"title":"NOAA Multi-Radar / Multi-Sensor System (MRMS) at the BNF Field Site(s)","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Ty Janoski","given":"Ty","family":"Janoski"},"name":"Ty Janoski","orcid":"0000-0003-4344-355X","affiliations":["City College of New York and NOAA/OAR National Severe Storms Laboratory"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Mya Sears","given":"Mya","family":"Sears"},"name":"Mya Sears","orcid":"0009-0003-5870-7498","affiliations":["NSF National Center for Atmospheric Research"],"id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Bella Condo","given":"Bella","family":"Condo"},"name":"Bella Condo","orcid":"0009-0000-0688-7077","affiliations":["University at Albany (State University of New York)"],"id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"JD Heaton","given":"JD","family":"Heaton"},"name":"JD Heaton","orcid":"0009-0005-7424-4889","affiliations":["Metropolitan State University of Denver"],"id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"MaKenna Collins","given":"MaKenna","family":"Collins"},"name":"MaKenna Collins","orcid":"0009-0003-5566-3370","affiliations":["Jackson State University"],"id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","affiliations":["Argonne National Laboratory"],"id":"contributors-myst-generated-uid-5"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/mrms-cookbook","copyright":"2025","affiliations":[{"id":"City College of New York and NOAA/OAR National Severe Storms Laboratory","name":"City College of New York and NOAA/OAR National Severe Storms Laboratory"},{"id":"NSF National Center for Atmospheric Research","name":"NSF National Center for Atmospheric Research"},{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"Metropolitan State University of Denver","name":"Metropolitan State University of Denver"},{"id":"Jackson State University","name":"Jackson State University"},{"id":"Argonne National Laboratory","name":"Argonne National Laboratory"},{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"source_url":"https://github.com/projectpythia/mrms-cookbook/blob/main/notebooks/bnf-mrms-qpe-hourly.ipynb","edit_url":"https://github.com/projectpythia/mrms-cookbook/edit/main/notebooks/bnf-mrms-qpe-hourly.ipynb","thumbnail":"/mrms-cookbook/build/arm_logo-e20c9cae05ed05abbc44f2aa4f0c7927.png","exports":[{"format":"ipynb","filename":"bnf-mrms-qpe-hourly.ipynb","url":"/mrms-cookbook/build/bnf-mrms-qpe-hourly-59c8770d9952c6e79f15606008110224.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"image","url":"/mrms-cookbook/build/arm_logo-e20c9cae05ed05abbc44f2aa4f0c7927.png","alt":"ARM Logo","width":"500px","align":"center","key":"A5ky5CBZJN","urlSource":"../thumbnails/arm_logo.png"}],"key":"yxJjfWUyP1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"NOAA Multi-Radar / Multi-Sensor System (MRMS) at the BNF Field Site(s)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pNRbAjdSSF"}],"identifier":"noaa-multi-radar-multi-sensor-system-mrms-at-the-bnf-field-site-s","label":"NOAA Multi-Radar / Multi-Sensor System (MRMS) at the BNF Field Site(s)","html_id":"noaa-multi-radar-multi-sensor-system-mrms-at-the-bnf-field-site-s","implicit":true,"key":"jodWxvGakK"}],"key":"TzXkBnVJeP"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dKUOZqp6Kp"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"OCKOlfuogW"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Weâ€™ll go through the steps of:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"diuuo3kP4u"}],"key":"SMZDs440w6"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Define our region of verification sites","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"dxuxdm1fJI"}],"key":"Fesj43G6U1"}],"key":"XR13HJE8cC"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Query and Load Data from MRMS Buckets on AWS","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"T2Zzr8MYDg"}],"key":"EERzZOGDMH"}],"key":"CtvNvRMoeb"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Create a Multi-Panel Display of QPE for the different sites","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LD2y2lNnj1"}],"key":"IaxZCd5jXv"}],"key":"Ukt0BkoDT3"}],"key":"tsLjgY35uD"}],"key":"GonLhsjPKK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HQtOG8cdEI"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"K8K22vT5gE"},{"type":"table","position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ButWyQAX9M"}],"key":"He8no0Na4W"},{"type":"tableCell","header":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"UaLP3VnSJB"}],"key":"DqpZIoQW0U"},{"type":"tableCell","header":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"xsXhNuKbXT"}],"key":"UBFHOIDMMy"}],"key":"guK05Vr7Fm"},{"type":"tableRow","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/cartopy/cartopy","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Intro to Cartopy","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"tKJTHZ3PLe"}],"urlSource":"https://foundations.projectpythia.org/core/cartopy/cartopy","key":"mrobdORgP1"}],"key":"owXCb4wsyQ"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"d5XWIpolO8"}],"key":"wECJOXAUDL"},{"type":"tableCell","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Mapping and Tiles","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"yOzlrAEIF6"}],"key":"g1hO43AbGU"}],"key":"rD4fW56YHk"},{"type":"tableRow","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray/xarray-intro/","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Intro to Xarray","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"cCBhZplh4H"}],"urlSource":"https://foundations.projectpythia.org/core/xarray/xarray-intro/","key":"s3cE9tOaPX"}],"key":"OSjl9mkajl"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Necessary","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Vidr0nFWj1"}],"key":"K0Gbi1N2sG"},{"type":"tableCell","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Familiarity with metadata structure","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"be7ns6sX23"}],"key":"N2GHi2tAc7"}],"key":"LlHYoK2vb1"}],"key":"yipHGpndQO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"r4OHEkjh7H"}],"key":"Gl8Cwr2QOn"},{"type":"text","value":": 30 minutes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"GPxBaOcUv5"}],"key":"hEUS47gi69"}],"key":"hve2Hm4SgP"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"strong","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"System requirements","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Tq6l5raI3h"}],"key":"OXa9Mq14GP"},{"type":"text","value":":","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"KgKUAWFkCB"}],"key":"zSCea7n6LQ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"Any Operating System","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"xFOLRdZoFT"}],"key":"tyk1Zg5ts5"}],"key":"CLsc5J72GZ"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"paragraph","children":[{"type":"text","value":"At least 8 GB of RAM","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"xPgx1NIpY9"}],"key":"MMGnUXqBwJ"}],"key":"aDiJtG2yFJ"}],"key":"o5MjYtAEAi"}],"key":"NXWGdm5LDy"}],"key":"kQOcYbn81c"}],"key":"OyGa8E3TrG"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iPpLCDNTGg"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"cOMLYB7i5U"}],"key":"SMFQcGEb5C"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import cfgrib\nimport xarray as xr\nimport fsspec\nimport glob\nimport tempfile\nimport gzip\nimport geopandas as gpd\nimport pandas as pd\nimport numpy as np\nimport warnings\n\nfrom cartopy import feature as cfeature\nimport cartopy.crs as ccrs\nfrom cartopy.io.img_tiles import OSM\nfrom matplotlib.transforms import offset_copy\nfrom matplotlib import pyplot as plt\n\nfrom metpy.plots import USCOUNTIES\n\nimport cmweather\n\n# To ignore all RuntimeWarnings globally\nwarnings.filterwarnings(\"ignore\", category=RuntimeWarning)","key":"PXraUEI99x"},{"type":"output","id":"-ktoE48rMcIw577Fgu5Zo","data":[],"key":"hYfjRO3KIs"}],"key":"LVR6KACc83"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Hourly QPE BNF Mosaic","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cvjzMsHp1a"}],"identifier":"hourly-qpe-bnf-mosaic","label":"Hourly QPE BNF Mosaic","html_id":"hourly-qpe-bnf-mosaic","implicit":true,"key":"hUGQQPyw05"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Xt2xP8nvZp"},{"type":"link","url":"https://www.nssl.noaa.gov/projects/mrms/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"NOAA Multi-Radar / Multi-Sensor System (MRMS)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jJL8IKWOvL"}],"urlSource":"https://www.nssl.noaa.gov/projects/mrms/","key":"zc4S69wFw8"},{"type":"text","value":" was created to produce products of preciptiation impacts on transportation and aviation.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tC3A8vGzY2"}],"key":"BDLNVq3Ypz"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hWLPBG5V6o"},{"type":"link","url":"https://aws.amazon.com/marketplace/pp/prodview-6odvdc4md2jjc","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"NOAA MRMS AWS Bucket","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FvTjJsllrD"}],"urlSource":"https://aws.amazon.com/marketplace/pp/prodview-6odvdc4md2jjc","key":"n9WnLr53lJ"},{"type":"text","value":", this notebook details creation of quicklooks to investigate a Quantitative Preciptiation Estimates (QPE) for the U.S. Department of Energy Atmospheric Radiation Measurement (ARM) AMF-3 Deployment to Bankhead National Forest.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sbgSFGOTrk"}],"key":"YvGNPkYYmK"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"We start first with a dictionary containing our sites of interest, these are located Southwest of Decatur, Alabama.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"NhQlsJ5CgC"}],"key":"M1auEvb7J4"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"More about the BNF Site can be found on the ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"mNvxKoz6Gh"},{"type":"link","url":"https://www.arm.gov/capabilities/observatories/bnf","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"ARM Website","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"hXbOhPIdTf"}],"urlSource":"https://www.arm.gov/capabilities/observatories/bnf","key":"wiXoANipcN"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uLGMK5Gynw"}],"key":"UStoZrSIWu"}],"key":"zcVEbS6mk5"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"global_sites = {\"M1\" : [34.34525, -87.33842],\n                \"S4\" : [34.46451, -87.23598],\n                \"S3\" : [34.63080, -87.13311],\n                \"S20\" : [34.65401, -87.29264],\n                \"S30\" : [34.38501, -86.92757],\n                \"S40\" : [34.17932, -87.45349]}\n\n\n# Define a domain to set the extent of the figures\nbnf_domain = [272.0, 274.0, 34.1, 35.1]","key":"kOqVSFJ9Ir"},{"type":"output","id":"iMANYoRkEIiKt2HqulwRZ","data":[],"key":"IqrHB58eDX"}],"key":"XUuELFKNiU"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualize the Site Locations Using Cartopy","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BnQGX4huFe"}],"identifier":"visualize-the-site-locations-using-cartopy","label":"Visualize the Site Locations Using Cartopy","html_id":"visualize-the-site-locations-using-cartopy","implicit":true,"key":"bG9csfxRJc"}],"key":"qhRAFw86W9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"fig = plt.figure(figsize=(12,8))\nax = plt.subplot(projection=ccrs.PlateCarree())\n\ntiler = OSM()\nax.add_image(tiler, 12, zorder=0, alpha=0.7)\nfor site in global_sites:\n    ax.scatter(global_sites[site][1], global_sites[site][0], label=site)\n\nax.set_extent(bnf_domain)\n\nplt.legend(loc=\"upper right\")\nplt.title(\"ARM Bankhead National Forest Sites\", fontsize=16);","key":"zuS9NDGZt4"},{"type":"output","id":"I8kPJwFyTkToTkMoU1TPf","data":[{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 1200x800 with 1 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"5d6b905271f395fba34a2e32284149c0","path":"/mrms-cookbook/build/5d6b905271f395fba34a2e32284149c0.png"}}}],"key":"wEfDskJ8IA"}],"key":"XKpawJGZ6x"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Query and Load Data from MRMS Buckets on AWS","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QIZ5vzgSps"}],"identifier":"query-and-load-data-from-mrms-buckets-on-aws","label":"Query and Load Data from MRMS Buckets on AWS","html_id":"query-and-load-data-from-mrms-buckets-on-aws","implicit":true,"key":"LQAd53vYy6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Note the Multi-Sensor (i.e. gauge adjusted) QPE product is split into two categories (Pass 1 and Pass 2), which defines the gauge latency used to adjust radar dervied QPE.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pGY7c8iOL2"}],"key":"A4DAq3oUud"}],"key":"lVZUyEOtYp"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define a Date for Analysis [YYYYMMDD format]\nDATE = \"20250524\"\nHOUR = \"000000\"","key":"cANuqECqSY"},{"type":"output","id":"dnQjNO2XMj94Bv5BUgR4l","data":[],"key":"v1PHT6thUa"}],"key":"zsyc3fJYGC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"## Setup the AWS S3 filesystem\nfs = fsspec.filesystem(\"s3\", anon=True)","key":"WJSTRbjg36"},{"type":"output","id":"ZbBc8DjajsIAJOlmZPPAJ","data":[],"key":"LYn3RHEUxr"}],"key":"cOxSjEPtbj"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"s3_multi_bucket = [f\"s3://noaa-mrms-pds/CONUS/MultiSensor_QPE_01H_Pass1_00.00/{DATE}/*.gz\"]\ns3_pass2_bucket = [f\"s3://noaa-mrms-pds/CONUS/MultiSensor_QPE_01H_Pass2_00.00/{DATE}/*.gz\"]\ns3_radar_bucket = [f\"s3://noaa-mrms-pds/CONUS/RadarOnly_QPE_01H_00.00/{DATE}/*[0-9]0000.grib2.gz\"]","key":"IAttXn054N"},{"type":"output","id":"q_VIR2bAE5BRhPPs8dAug","data":[],"key":"bqxkhqEI05"}],"key":"XuVBb36YQI"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Loop through and Create Lists of Datasets","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SU82j1gvMK"}],"identifier":"loop-through-and-create-lists-of-datasets","label":"Loop through and Create Lists of Datasets","html_id":"loop-through-and-create-lists-of-datasets","implicit":true,"key":"mp5saCuZZ2"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Our next step is to search, access, and load our data into merged datasets, adding some additional metadata such as units. We apply this for each our our multipass, pass2, and radar datasets.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"lKhntzkbyu"}],"key":"qpHqn1zdpP"}],"key":"am7RgJqhWx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_multi_list = []\nfor scan in s3_multi_bucket:\n    file_path = sorted(fs.glob(scan))\n    for mrms in file_path:\n        with fs.open(mrms, 'rb') as gzip_file:\n            with tempfile.NamedTemporaryFile(suffix=\".grib2\") as f:\n                # Uncompress and read the file\n                f.write(gzip.decompress(gzip_file.read()))\n                ds = xr.load_dataset(f.name, decode_timedelta=False)\n                # Parameters are stored as 'unknown'; meta data in filename\n                ds = ds.rename({\"unknown\" : \"multisensor_qpe_1hr\"})\n                ds[\"multisensor_qpe_1hr\"].attrs[\"units\"] = \"mm\"\n                ds[\"multisensor_qpe_1hr\"].attrs[\"long_name\"] = \"Precipitation Accumulation (1-Hr latency)\"\n                # Subset for the desired bounding box and take out all missing values\n                ds = ds.sel(latitude=slice(bnf_domain[3], bnf_domain[2]), longitude=slice(bnf_domain[0], bnf_domain[1])).where(ds.multisensor_qpe_1hr > 0)\n                ds_multi_list.append(ds)","key":"YJRKNsuQJB"},{"type":"output","id":"pbH1odrsiT0RejHqWO54Q","data":[],"key":"qK34kQCDIa"}],"key":"xqDNqplZqX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_radar_list = []\nfor scan in s3_radar_bucket:\n    file_path = sorted(fs.glob(scan))\n    for mrms in file_path:\n        with fs.open(mrms, 'rb') as gzip_file:\n            with tempfile.NamedTemporaryFile(suffix=\".grib2\") as f:\n                # Uncompress and read the file\n                f.write(gzip.decompress(gzip_file.read()))\n                ds = xr.load_dataset(f.name, decode_timedelta=False)\n                ds = ds.rename({\"unknown\" : \"radar_qpe_1hr\"})\n                ds[\"radar_qpe_1hr\"].attrs[\"units\"] = \"mm\"\n                ds[\"radar_qpe_1hr\"].attrs[\"long_name\"] = \"Precipitation Accumulation\"\n                 # Subset for the desired bounding box and take out all missing values\n                ds = ds.sel(latitude=slice(bnf_domain[3], bnf_domain[2]), longitude=slice(bnf_domain[0], bnf_domain[1])).where(ds.radar_qpe_1hr > 0)\n                ds_radar_list.append(ds)","key":"LhtsKqyYm8"},{"type":"output","id":"3S-igXmbcLH4UyhQCX2k7","data":[],"key":"MqdIDd9d2V"}],"key":"L5Rm8wUpGS"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds_pass2_list = []\nfor scan in s3_pass2_bucket:\n    file_path = sorted(fs.glob(scan))\n    for mrms in file_path:\n        with fs.open(mrms, 'rb') as gzip_file:\n            with tempfile.NamedTemporaryFile(suffix=\".grib2\") as f:\n                # Uncompress and read the file\n                f.write(gzip.decompress(gzip_file.read()))\n                ds = xr.load_dataset(f.name, decode_timedelta=False)\n                ds = ds.rename({\"unknown\" : \"multisensor_qpe_pass2\"})\n                ds[\"multisensor_qpe_pass2\"].attrs[\"units\"] = \"mm\"\n                ds[\"multisensor_qpe_pass2\"].attrs[\"long_name\"] = \"Precipitation Accumulation (2-Hr latency)\"\n                # Subset for the desired bounding box and take out all missing values\n                ds = ds.sel(latitude=slice(bnf_domain[3], bnf_domain[2]), longitude=slice(bnf_domain[0], bnf_domain[1])).where(ds.multisensor_qpe_pass2 > 0)\n                ds_pass2_list.append(ds)","key":"kYWGLSFDSy"},{"type":"output","id":"ancdqFzSa9TZzhrMFJRf9","data":[],"key":"ZNBuvwr1Y3"}],"key":"VB5GiQW8IK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Merge our Files Together","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lTAfKEgHxU"}],"identifier":"merge-our-files-together","label":"Merge our Files Together","html_id":"merge-our-files-together","implicit":true,"key":"pOsj56uU5I"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Once we have lists of files, we can merge based on the time dimension.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"W0VYkSyBaC"}],"key":"It1OyhdIWf"}],"key":"fJt5xFpG8A"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Concatenate all hourly files into xarray datasets\nds_radar_merged = xr.concat(ds_radar_list, dim=\"time\")\nds_multi_merged = xr.concat(ds_multi_list, dim=\"time\")\nds_pass2_merged = xr.concat(ds_pass2_list, dim=\"time\")","key":"orSn7AFhQT"},{"type":"output","id":"cj1ne4NWCna7F7PyH64fI","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_3806/2380590686.py:2: FutureWarning: In a future version of xarray the default value for coords will change from coords='different' to coords='minimal'. This is likely to lead to different results when multiple datasets have matching variables with overlapping values. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set coords explicitly.\n  ds_radar_merged = xr.concat(ds_radar_list, dim=\"time\")\n/tmp/ipykernel_3806/2380590686.py:3: FutureWarning: In a future version of xarray the default value for coords will change from coords='different' to coords='minimal'. This is likely to lead to different results when multiple datasets have matching variables with overlapping values. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set coords explicitly.\n  ds_multi_merged = xr.concat(ds_multi_list, dim=\"time\")\n/tmp/ipykernel_3806/2380590686.py:4: FutureWarning: In a future version of xarray the default value for coords will change from coords='different' to coords='minimal'. This is likely to lead to different results when multiple datasets have matching variables with overlapping values. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set coords explicitly.\n  ds_pass2_merged = xr.concat(ds_pass2_list, dim=\"time\")\n"}],"key":"fx9xLZZfLq"}],"key":"WqTTof5U4I"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"And finally merge our various passes and QPE data into one single dataset.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hjGXCotpuk"}],"key":"WhxyZBDfkY"}],"key":"VJj5v324I9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Merge Radar, Multi-Sensor Pass 1 and Multi-Sensor Pass 2 QPE into single dataset\nds_merged = xr.merge([ds_radar_merged, ds_multi_merged, ds_pass2_merged])","key":"ttKg1HawRz"},{"type":"output","id":"IYR8DT07n8i0e6QQPejIa","data":[{"output_type":"stream","name":"stderr","text":"/tmp/ipykernel_3806/3525207103.py:2: FutureWarning: In a future version of xarray the default value for compat will change from compat='no_conflicts' to compat='override'. This is likely to lead to different results when combining overlapping variables with the same name. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set compat explicitly.\n  ds_merged = xr.merge([ds_radar_merged, ds_multi_merged, ds_pass2_merged])\n/tmp/ipykernel_3806/3525207103.py:2: FutureWarning: In a future version of xarray the default value for compat will change from compat='no_conflicts' to compat='override'. This is likely to lead to different results when combining overlapping variables with the same name. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set compat explicitly.\n  ds_merged = xr.merge([ds_radar_merged, ds_multi_merged, ds_pass2_merged])\n/tmp/ipykernel_3806/3525207103.py:2: FutureWarning: In a future version of xarray the default value for compat will change from compat='no_conflicts' to compat='override'. This is likely to lead to different results when combining overlapping variables with the same name. To opt in to new defaults and get rid of these warnings now use `set_options(use_new_combine_kwarg_defaults=True) or set compat explicitly.\n  ds_merged = xr.merge([ds_radar_merged, ds_multi_merged, ds_pass2_merged])\n"}],"key":"dbpS0z1WYS"}],"key":"XqpiWqPrc1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Calculate Precipitation Accumulation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IrZyHTTIih"}],"identifier":"calculate-precipitation-accumulation","label":"Calculate Precipitation Accumulation","html_id":"calculate-precipitation-accumulation","implicit":true,"key":"FjApRJUCE7"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Our last step is to calculate our preciptiation accumulation as observed from radar data. We do this by using the xarray cumulative sum ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"i0DWZYll9n"},{"type":"link","url":"https://docs.xarray.dev/en/latest/generated/xarray.DataArray.cumsum.html","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"cumsum","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"V2XnSvVreS"}],"urlSource":"https://docs.xarray.dev/en/latest/generated/xarray.DataArray.cumsum.html","key":"a0wDvsNJHa"},{"type":"text","value":" function.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"b6UqHi8Grt"}],"key":"hoMhM0ra1d"}],"key":"bZLvTukeGo"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Calculate the Cumulative Distribution\nradar_cumulative = ds_merged['radar_qpe_1hr'].cumsum(dim='time')\nmultisensor = ds_merged['multisensor_qpe_1hr'].cumsum(dim=\"time\")\nmultisensor_pass2 = ds_merged['multisensor_qpe_pass2'].cumsum(dim=\"time\")\n\nds_merged['cumulative_radar_qpe'] = radar_cumulative\nds_merged[\"cumulative_radar_qpe\"].attrs[\"units\"] = \"mm\"\nds_merged[\"cumulative_radar_qpe\"].attrs[\"long_name\"] = \"Precipitation Accumulation\"\n\nds_merged['cumulative_multisensor'] = multisensor\nds_merged[\"cumulative_multisensor\"].attrs[\"units\"] = \"mm\"\nds_merged[\"cumulative_multisensor\"].attrs[\"long_name\"] = \"Precipitation Accumulation (1-Hr latency)\"\n\nds_merged['cumulative_ms_pass2'] = multisensor_pass2\nds_merged[\"cumulative_ms_pass2\"].attrs[\"units\"] = \"mm\"\nds_merged[\"cumulative_ms_pass2\"].attrs[\"long_name\"] = \"Precipitation Accumulation (2-Hr latency)\"\nds_merged","key":"OXABfzkLZe"},{"type":"output","id":"n8lBEzGrTFxakSF5adI6Q","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"<xarray.Dataset> Size: 12MB\nDimensions:                 (time: 24, latitude: 100, longitude: 200)\nCoordinates:\n  * time                    (time) datetime64[ns] 192B 2025-05-24 ... 2025-05...\n  * latitude                (latitude) float64 800B 35.1 35.09 ... 34.12 34.11\n  * longitude               (longitude) float64 2kB 272.0 272.0 ... 274.0 274.0\n    step                    float64 8B 0.0\n    heightAboveSea          float64 8B 0.0\n    valid_time              (time) datetime64[ns] 192B 2025-05-24 ... 2025-05...\nData variables:\n    radar_qpe_1hr           (time, latitude, longitude) float32 2MB nan ... nan\n    multisensor_qpe_1hr     (time, latitude, longitude) float32 2MB nan ... nan\n    multisensor_qpe_pass2   (time, latitude, longitude) float32 2MB nan ... nan\n    cumulative_radar_qpe    (time, latitude, longitude) float32 2MB 0.0 ... 13.3\n    cumulative_multisensor  (time, latitude, longitude) float32 2MB 0.0 ... 13.5\n    cumulative_ms_pass2     (time, latitude, longitude) float32 2MB 0.0 ... 9.5\nAttributes:\n    GRIB_edition:            2\n    GRIB_centre:             161\n    GRIB_centreDescription:  US NOAA Office of Oceanic and Atmospheric Research\n    GRIB_subCentre:          0\n    Conventions:             CF-1.7\n    institution:             US NOAA Office of Oceanic and Atmospheric Research\n    history:                 2025-10-09T01:10 GRIB to CDM+CF via cfgrib-0.9.1...","content_type":"text/plain"},"text/html":{"content_type":"text/html","hash":"7d2e1360ecc831b5e25e9d0dd03c3fc3","path":"/mrms-cookbook/build/7d2e1360ecc831b5e25e9d0dd03c3fc3.html"}}}],"key":"CBh4t8Zmoz"}],"key":"qnFsKWR33M"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a Multi-Panel QPE Display","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UU14xNaZaX"}],"identifier":"create-a-multi-panel-qpe-display","label":"Create a Multi-Panel QPE Display","html_id":"create-a-multi-panel-qpe-display","implicit":true,"key":"PF9xpH27Ck"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now that we have our merged, cleaned data, we can create a single graphic summarizing the cumulative precipitation at our different sites. We use nearest neighbor here to subset from the broader region.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"c2FfK22AUI"}],"key":"rp5JJH2QMe"}],"key":"JXYcnbbnLO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"#---------------------------------------------------\n# Define the Figure for Detailed Subplot Placement\n#---------------------------------------------------\nfig = plt.figure(figsize=(24, 10))\ntiler = OSM()\nmercator = tiler.crs\nax = fig.add_subplot(1, 3, 1, projection=ccrs.PlateCarree())\n\n# adjust the subplot widths\nplt.subplots_adjust(wspace=0.3)\n\n# Find the maximum value at each position\nda_max = ds_merged.isel(time=-1).radar_qpe_1hr.max()\n\n# Find the minimum value at each position\nda_min = 0\n\n# ---------------------------------------------\n# Display the Radar Precipitation Accumulation\n# ---------------------------------------------\n\n## subset the data\nds_merged.isel(time=15).radar_qpe_1hr.plot(transform=ccrs.PlateCarree(),\n                                           ax=ax,\n                                           cmap=\"ChaseSpectral\",\n                                           vmin=da_min,\n                                           vmax=da_max,\n                                           cbar_kwargs={\"location\" : \"bottom\"})\n\n# Add some various map elements to the plot to make it recognizable.\nax.add_feature(cfeature.LAND)\nax.add_feature(cfeature.OCEAN)\nax.add_feature(cfeature.BORDERS)\nax.add_image(tiler, 12, zorder=1, alpha=0.55)\nax.gridlines(draw_labels=True)\n\n# Set plot bounds\nax.set_extent(bnf_domain)\n\n# add in crosshairs to indicate the lat/lon slices\nax.axhline(y=global_sites[\"M1\"][0], color=\"black\", linestyle=\"--\")\nax.axvline(x=global_sites[\"M1\"][1], color=\"red\", linestyle=\"--\")\n\n# Display the location of the BNF supplementarly sites\nfor key in global_sites:\n    # Add a marker for the BNF sites.\n    ax.plot(global_sites[key][1], \n            global_sites[key][0], \n            marker='o', \n            color='black', \n            markersize=10, \n            alpha=0.7, \n            transform=ccrs.PlateCarree())\n\n    # Use the cartopy interface to create a matplotlib transform object\n    # for the Geodetic coordinate system. We will use this along with\n    # matplotlib's offset_copy function to define a coordinate system which\n    # translates the text by 25 pixels to the left.\n    geodetic_transform = ccrs.PlateCarree()._as_mpl_transform(ax)\n    text_transform = offset_copy(geodetic_transform, units='dots', x=+50, y=+15)\n\n    # Add text to the right of the symbol.\n    ax.text(global_sites[key][1]-0.1, \n            global_sites[key][0], \n            key, \n            verticalalignment='center', \n            horizontalalignment='right', \n            transform=text_transform,\n            bbox=dict(facecolor='sandybrown', \n            alpha=0.5, \n            boxstyle='round'))\n    \n# update the title of the display\nax.set_title(np.datetime_as_string(ds_merged['valid_time'].isel(time=15).data, unit='s').replace(\"T\", \" - \") + \n             \"Z\\n\" + \"Radar Derived 1-Hr QPE - MRMS\")\n\n# ----------------------------\n# Display the Multisensor QPE\n# ----------------------------\n## subset the data\nax1 = fig.add_subplot(1, 3, 2, projection=ccrs.PlateCarree())\nds_merged.isel(time=15).multisensor_qpe_1hr.plot(transform=ccrs.PlateCarree(),\n                                                 ax=ax1,\n                                                 cmap=\"ChaseSpectral\",\n                                                 vmin=da_min,\n                                                 vmax=da_max,\n                                                 cbar_kwargs={\"location\" : \"bottom\"})\n\n# Add some various map elements to the plot to make it recognizable.\nax1.add_feature(cfeature.LAND)\nax1.add_feature(cfeature.OCEAN)\nax1.add_feature(cfeature.BORDERS)\nax1.add_image(tiler, 12, zorder=1, alpha=0.55)\nax1.gridlines(draw_labels=True)\n\n# Set plot bounds\nax1.set_extent(bnf_domain)\n\n# add in crosshairs to indicate the lat/lon slices\nax1.axhline(y=global_sites[\"M1\"][0], color=\"black\", linestyle=\"--\")\nax1.axvline(x=global_sites[\"M1\"][1], color=\"red\", linestyle=\"--\")\n\n# Display the location of the BNF Supplementary Site\nfor key in global_sites:\n    # Add a marker for the BNF sites.\n    ax1.plot(global_sites[key][1], \n            global_sites[key][0], \n            marker='o', \n            color='black', \n            markersize=10, \n            alpha=0.7, \n            transform=ccrs.PlateCarree())\n\n    # Use the cartopy interface to create a matplotlib transform object\n    # for the Geodetic coordinate system. We will use this along with\n    # matplotlib's offset_copy function to define a coordinate system which\n    # translates the text by 25 pixels to the left.\n    geodetic_transform = ccrs.PlateCarree()._as_mpl_transform(ax1)\n    text_transform = offset_copy(geodetic_transform, units='dots', x=+50, y=+15)\n\n\n    # Add text to the right of the site marker.\n    ax1.text(global_sites[key][1]-0.1, \n             global_sites[key][0], \n             key, \n             verticalalignment='center', \n             horizontalalignment='right', \n             transform=text_transform,\n             bbox=dict(facecolor='sandybrown', \n             alpha=0.5, \n             boxstyle='round')\n    )\n    \n# update the title of the display\nax1.set_title(np.datetime_as_string(ds_merged['valid_time'].isel(time=15).data, unit='s').replace(\"T\", \" - \") + \n             \"Z\\n\" + \"Multisensor 1-Hr QPE - Pass 1\")\n\n# ----------------------------\n# Display the QPE Difference\n# ----------------------------\n## subset the data\nax3 = fig.add_subplot(1, 3, 3, projection=ccrs.PlateCarree())\nds_merged.isel(time=15).multisensor_qpe_pass2.plot(transform=ccrs.PlateCarree(),\n                                                   ax=ax3,\n                                                   cmap=\"ChaseSpectral\",\n                                                   vmin=da_min,\n                                                   vmax=da_max,\n                                                   cbar_kwargs={\"location\" : \"bottom\"})\n\n# Add some various map elements to the plot to make it recognizable.\nax3.add_feature(cfeature.LAND)\nax3.add_feature(cfeature.OCEAN)\nax3.add_feature(cfeature.BORDERS)\nax3.add_image(tiler, 12, zorder=1, alpha=0.55)\nax3.gridlines(draw_labels=True)\n\n# Set plot bounds\nax3.set_extent(bnf_domain)\n\n# add in crosshairs to indicate the lat/lon slices\nax3.axhline(y=global_sites[\"M1\"][0], color=\"black\", linestyle=\"--\")\nax3.axvline(x=global_sites[\"M1\"][1], color=\"red\", linestyle=\"--\")\n\n# Display the location of the BNF Supplementary Sites\nfor key in global_sites:\n    # Add a marker for the BNF sites.\n    ax3.plot(global_sites[key][1], \n            global_sites[key][0], \n            marker='o', \n            color='black', \n            markersize=10, \n            alpha=0.7, \n            transform=ccrs.PlateCarree())\n\n    # Use the cartopy interface to create a matplotlib transform object\n    # for the Geodetic coordinate system. We will use this along with\n    # matplotlib's offset_copy function to define a coordinate system which\n    # translates the text by 25 pixels to the left.\n    geodetic_transform = ccrs.PlateCarree()._as_mpl_transform(ax3)\n    text_transform = offset_copy(geodetic_transform, units='dots', x=+50, y=+15)\n\n    # Add text to the right of the site marker.\n    ax3.text(global_sites[key][1]-0.1, \n             global_sites[key][0], \n             key, \n             verticalalignment='center', \n             horizontalalignment='right', \n             transform=text_transform,\n             bbox=dict(facecolor='sandybrown', \n             alpha=0.5, \n             boxstyle='round'))\n    \n# update the title of the display\nax3.set_title(np.datetime_as_string(ds_merged['valid_time'].isel(time=15).data, unit='s').replace(\"T\", \" - \") + \n             \"Z\\n\" + \"MultiSensor 24-Hr QPE - Pass 2\");","key":"FT1tX8dgfH"},{"type":"output","id":"QhMq_i5LIC0frIpj1P9wQ","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/mrms-cookbook-dev/lib/python3.12/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/10m_physical/ne_10m_land.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/mrms-cookbook-dev/lib/python3.12/site-packages/cartopy/io/__init__.py:242: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/10m_physical/ne_10m_ocean.zip\n  warnings.warn(f'Downloading: {url}', DownloadWarning)\n"},{"output_type":"display_data","metadata":{},"data":{"text/plain":{"content":"<Figure size 2400x1000 with 6 Axes>","content_type":"text/plain"},"image/png":{"content_type":"image/png","hash":"b54b3360cf16a8dcdbe276aa91c6b6c4","path":"/mrms-cookbook/build/b54b3360cf16a8dcdbe276aa91c6b6c4.png"}}}],"key":"bLrqSn7KJ7"}],"key":"cHngylMhPf"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Summary","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"aOIsJ62dVN"}],"identifier":"summary","label":"Summary","html_id":"summary","implicit":true,"key":"QTQY9bc0cF"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Within this notebook, we explored plotting a set of a field sites, accessing MRMS data, and visualizing a case over the ARM DOE Bankhead National Forest field site. We hope this serves as a framework for verification and understanding precipitation values in specific regions of interest.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"n66wGlvFyW"}],"key":"w2vCgqXkcz"},{"type":"heading","depth":3,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Whatâ€™s Next","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ocufzvzyGC"}],"identifier":"whats-next","label":"Whatâ€™s Next","html_id":"whats-next","implicit":true,"key":"LEsSyp640x"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We can extend this workflow by investigating timeseries for the various sites and looking into more robust verification techniques.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AUrPpR1kvM"}],"key":"z8d0OFwcNx"},{"type":"heading","depth":2,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rn3RdWofUO"}],"identifier":"references","label":"References","html_id":"references","implicit":true,"key":"lwquV7e0Kq"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://github.com/ARM-Development/bnf-radar-examples/blob/main/notebooks/bnf-mrms-qpe-hourly.ipynb","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Notebook originally modified from Joseph Oâ€™Brien","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"elY1dnjNgb"}],"urlSource":"https://github.com/ARM-Development/bnf-radar-examples/blob/main/notebooks/bnf-mrms-qpe-hourly.ipynb","data":{"kind":"file","org":"ARM-Development","repo":"bnf-radar-examples","reference":"main","file":"notebooks/bnf-mrms-qpe-hourly.ipynb","raw":"https://raw.githubusercontent.com/ARM-Development/bnf-radar-examples/main/notebooks/bnf-mrms-qpe-hourly.ipynb"},"internal":false,"protocol":"github","key":"xUOhazsjgY"}],"key":"CAUVZ3UXkM"}],"key":"zdtYSkeHDQ"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"paragraph","children":[{"type":"link","url":"https://registry.opendata.aws/noaa-mrms-pds","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"NOAA Multi-Radar/Multi-Sensor System (MRMS) was accessed on from https://registry.opendata.aws/noaa-mrms-pds","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Aerf6ESWZY"}],"urlSource":"https://registry.opendata.aws/noaa-mrms-pds","key":"gGvSWpBFQD"}],"key":"BJEKipnj99"}],"key":"uOsmultUOi"}],"key":"XVbvyzTkOl"}],"key":"Mp4yVP7eC7"}],"key":"sfzxcrG5xP"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Chapter 3: July 2025 Central TX Floods","url":"/notebooks/ch3-txfloods","group":"MRMS Cookbook"},"next":{"title":"Chapter 5: Real-time MRMS Visualization","url":"/notebooks/ch4-realtimedata","group":"MRMS Cookbook"}}},"domain":"http://localhost:3000"}
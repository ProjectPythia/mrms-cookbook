{"version":"1","records":[{"hierarchy":{"lvl1":"MRMS Cookbook"},"type":"lvl1","url":"/","position":0},{"hierarchy":{"lvl1":"MRMS Cookbook"},"content":"\n\n\n\n\n [![DOI](https://zenodo.org/badge/475509405.svg)](https://zenodo.org/badge/latestdoi/475509405) \n\nThis Project Pythia Cookbook covers how to access, analyze, and visualize Multi-radar, Multi-sensor (MRMS) Data.","type":"content","url":"/","position":1},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl2":"Motivation"},"type":"lvl2","url":"/#motivation","position":2},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl2":"Motivation"},"content":"The Multi-Radar, Multi-Sensor (MRMS) System combines radar, surface, and upper-air observation to produce a high-resolution (1 km) dataset used by researchers and forecasters alike. Despite its use, there are few published Python workflows that illustrate how to access MRMS data from Amazon Web Services (AWS) and produce beautiful, useful visualizations. We hope this cookbook serves the MRMS-user community well!","type":"content","url":"/#motivation","position":3},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl2":"Authors"},"type":"lvl2","url":"/#authors","position":4},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl2":"Authors"},"content":"","type":"content","url":"/#authors","position":5},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl3":"Contributors","lvl2":"Authors"},"type":"lvl3","url":"/#contributors","position":6},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl3":"Contributors","lvl2":"Authors"},"content":"","type":"content","url":"/#contributors","position":7},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl2":"Structure"},"type":"lvl2","url":"/#structure","position":8},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl2":"Structure"},"content":"Chapter 1 offers a brief overview of MRMS data and provides context for how the data is organized on AWS.\n\nChapter 2 contains a case study of the \n\nMarch 24–27 2023 Tornado Outbreak, showcasing fields relevant to severe weather prediction.\n\nChapter 3 examines another recent severe weather event, the \n\nJuly 2025 Central Texas Floods, instead focusing on precipitation fields and \n\nFLASH output, including comparisons to station observations.\n\nChapter 4 compares MRMS-derived precipitation estimates at Bankhead National Forest (BNF) Field Sites.\n\nChapter 5 offers a real-time look at MRMS data with the opportunity to select certain data fields.","type":"content","url":"/#structure","position":9},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl2":"Running the Notebooks"},"type":"lvl2","url":"/#running-the-notebooks","position":10},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl2":"Running the Notebooks"},"content":"You can either run the notebook using \n\nBinder or on your local machine.","type":"content","url":"/#running-the-notebooks","position":11},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-binder","position":12},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl3":"Running on Binder","lvl2":"Running the Notebooks"},"content":"The simplest way to interact with a Jupyter Notebook is through\n\n\nBinder, which enables the execution of a\n\n\nJupyter Book in the cloud. The details of how this works are not\nimportant for now. All you need to know is how to launch a Pythia\nCookbooks chapter via Binder. Simply navigate your mouse to\nthe top right corner of the book chapter you are viewing and click\non the rocket ship icon, (see figure below), and be sure to select\n“launch Binder”. After a moment you should be presented with a\nnotebook that you can interact with. I.e. you’ll be able to execute\nand even change the example programs. You’ll see that the code cells\nhave no output at first, until you execute them by pressing\nShift+Enter. Complete details on how to interact with\na live Jupyter notebook are described in \n\nGetting Started with\nJupyter.\n\nNote: not all Cookbook chapters are executable. If you do not see\nthe rocket ship icon, such as on this page, you are not viewing an\nexecutable book chapter.","type":"content","url":"/#running-on-binder","position":13},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"type":"lvl3","url":"/#running-on-your-own-machine","position":14},{"hierarchy":{"lvl1":"MRMS Cookbook","lvl3":"Running on Your Own Machine","lvl2":"Running the Notebooks"},"content":"If you are interested in running this material locally on your computer, you will need to follow this workflow:\n\nClone the https://github.com/ProjectPythia/mrms-cookbook repository: git clone https://github.com/ProjectPythia/mrms-cookbook.git\n\nMove into the mrms-cookbook directorycd mrms-cookbook\n\nCreate and activate your conda environment from the environment.yml fileconda env create -f environment.yml\nconda activate mrms-cookbook-dev\n\nMove into the notebooks directory and start up Jupyterlabcd notebooks/\njupyter lab","type":"content","url":"/#running-on-your-own-machine","position":15},{"hierarchy":{"lvl1":"Chapter 2: Case Study"},"type":"lvl1","url":"/notebooks/ch2-mar-2023-tornado-jdh","position":0},{"hierarchy":{"lvl1":"Chapter 2: Case Study"},"content":"","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh","position":1},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"March 24-27, 2023 Tornado Outbreak"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#march-24-27-2023-tornado-outbreak","position":2},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"March 24-27, 2023 Tornado Outbreak"},"content":"\n\n\n\nNext, title your notebook appropriately with a top-level Markdown header, # (see the very first cell above). Do not use this level header anywhere else in the notebook. Our book build process will use this title in the navbar, table of contents, etc. Keep it short, keep it descriptive.\n\nFollow this with a --- cell to visually distinguish the transition to the prerequisites section.\n\n\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#march-24-27-2023-tornado-outbreak","position":3},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Overview"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#overview","position":4},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Overview"},"content":"The tornado outbreak of March 24–27, 2023 was a devastating multi-day severe weather event that swept across the Southern United States, particularly impacting Mississippi, Alabama, Tennessee, and Georgia. Triggered by a slow-moving upper-level trough interacting with moist, unstable air from the Gulf of Mexico, the outbreak produced 35 confirmed tornadoes, including a violent EF4 that tore through Rolling Fork, Midnight, and Silver City, Mississippi with peak winds of 195 mph. That tornado alone caused catastrophic damage and multiple fatalities, prompting tornado emergencies and widespread destruction.\nOver the four-day span, the system also unleashed damaging straight-line winds, large hail, and flooding. In total, the outbreak resulted in 23 fatalities (plus two from non-tornadic causes), over 230 injuries, and an estimated $1.9 billion in damage. The event was notable not only for its intensity but also for its geographic breadth and the prolonged nature of the severe weather threat.\n\nThis chapter explores MRMS data from this tornado outbreak, using:\n\nReflectivity\n\nRotation\n\nHail Swaths\n\nLocal Storm Reports\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#overview","position":5},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Imports"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#imports","position":6},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Imports"},"content":"Begin your body of content with another --- divider before continuing into this section, then remove this body text and populate the following code cell with all necessary Python imports up-front:\n\nimport sys\nimport s3fs\nimport urllib\nimport tempfile\nimport gzip\nimport xarray as xr\nimport xarray\nimport io\nimport numpy as np\nimport cartopy\nimport datetime\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\n\ndef fetch_mrms_data(variable: str, yyyymmdd: str, hh: str) -> xr.DataArray:\n    \"\"\"\n    Downloads and loads MRMS data from NOAA PDS.\n\n    Parameters:\n        variable (str): MRMS product name (e.g., 'MergedReflectivityQC').\n        yyyymmdd (str): Date in YYYYMMDD format.\n        hh (str): Hour in HH format (00–23 UTC).\n\n    Returns:\n        xarray.DataArray: Decoded MRMS data array.\n    \"\"\"\n    url = (\n        f\"https://noaa-mrms-pds.s3.amazonaws.com/CONUS/{variable}/\"\n        f\"{yyyymmdd}/MRMS_{variable}_{yyyymmdd}-{hh}0000.grib2.gz\"\n    )\n\n    response = urllib.request.urlopen(url)\n    compressed_file = response.read()\n\n    with tempfile.NamedTemporaryFile(suffix=\".grib2\") as f:\n        f.write(gzip.decompress(compressed_file))\n        data_in = xr.load_dataarray(f.name, engine='cfgrib', decode_timedelta=True)\n\n    return data_in\n\n# response = urllib.request.urlopen(\"https://noaa-mrms-pds.s3.amazonaws.com/CONUS/CREF_1HR_MAX_00.50/20230325/MRMS_CREF_1HR_MAX_00.50_20230325-010000.grib2.gz\")\n\n# compressed_file = response.read()\n\n# with tempfile.NamedTemporaryFile(suffix=\".grib2\") as f:\n#             f.write(gzip.decompress(compressed_file))\n#             data_in = xr.load_dataarray(f.name, engine='cfgrib', decode_timedelta=True)\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#imports","position":7},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Composite Reflectivity"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#composite-reflectivity","position":8},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Composite Reflectivity"},"content":"\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#composite-reflectivity","position":9},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"Let’s bring in some data to work with!","lvl2":"Composite Reflectivity"},"type":"lvl3","url":"/notebooks/ch2-mar-2023-tornado-jdh#lets-bring-in-some-data-to-work-with","position":10},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"Let’s bring in some data to work with!","lvl2":"Composite Reflectivity"},"content":"\n\n#### March 24, 2023 - Rolling Fork - Silver City, MS Tornado -- EF4, 71 minutes long, est winds 195 mph\n## 3/25/23 1z to 2z, so we'll grab two hours of data shortly\n\ncref1z = fetch_mrms_data('CREF_1HR_MAX_00.50', '20230325', '01')\ncref2z = fetch_mrms_data('CREF_1HR_MAX_00.50', '20230325', '02')\n\n# Define bounds for Dixie Alley\nlon_min, lon_max = -96, -80\nlat_min, lat_max = 29, 38\nprojection = ccrs.LambertConformal(central_longitude=-88, central_latitude=34)\n\n# Mask fill values for both datasets\nmasked1 = np.ma.masked_where(cref1z == -99.0, cref1z)\nmasked2 = np.ma.masked_where(cref2z == -99.0, cref2z)\n\n# Create side-by-side subplots\nfig, axes = plt.subplots(\n    1, 2, figsize=(16, 8),\n    subplot_kw={'projection': projection},\n    gridspec_kw={'bottom': 0.2}  # leave room for shared colorbar\n)\n\nmeshes = []\nfor ax, masked, title in zip(axes, [masked1, masked2], [\"Reflectivity: 3/25/2023 @ 01z\", \"Reflectivity: 3/25/2023 @ 02z\"]):\n    ax.set_extent([lon_min, lon_max, lat_min, lat_max], crs=ccrs.PlateCarree())\n    ax.add_feature(cfeature.STATES.with_scale('50m'), edgecolor='gray')\n    ax.add_feature(cfeature.BORDERS.with_scale('50m'), linestyle='--', edgecolor='black')\n    ax.add_feature(cfeature.COASTLINE.with_scale('50m'))\n    \n    mesh = ax.pcolormesh(\n        cref2z.longitude, cref2z.latitude, masked,\n        cmap='turbo', transform=ccrs.PlateCarree(), shading='auto'\n    )\n    ax.set_title(title, fontsize=14)\n    meshes.append(mesh)\n\n# Add shared colorbar beneath both plots\ncbar_ax = fig.add_axes([0.25, 0.1, 0.5, 0.02])  # [left, bottom, width, height]\ncbar = fig.colorbar(meshes[0], cax=cbar_ax, orientation='horizontal')\ncbar.set_label('Reflectivity (dBZ)')\n\n# plt.tight_layout()\nplt.show()\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#lets-bring-in-some-data-to-work-with","position":11},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Surface Precip Rate"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#surface-precip-rate","position":12},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Surface Precip Rate"},"content":"","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#surface-precip-rate","position":13},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"Every 2 minutes! To show a difference, here is an hour.","lvl2":"Surface Precip Rate"},"type":"lvl3","url":"/notebooks/ch2-mar-2023-tornado-jdh#every-2-minutes-to-show-a-difference-here-is-an-hour","position":14},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"Every 2 minutes! To show a difference, here is an hour.","lvl2":"Surface Precip Rate"},"content":"\n\nprecip_1z = fetch_mrms_data('PrecipRate_00.00', '20230325', '01') # Precip Rate\nprecip_2z = fetch_mrms_data('PrecipRate_00.00', '20230325', '02')\nmasked1 = np.ma.masked_where(precip_1z == 0, precip_1z)\nmasked2 = np.ma.masked_where(precip_2z == 0, precip_2z)\n\n# Define bounds for Dixie Alley\nlon_min, lon_max = -96, -80\nlat_min, lat_max = 29, 38\nprojection = ccrs.LambertConformal(central_longitude=-88, central_latitude=34)\n\n# Create side-by-side subplots\nfig, axes = plt.subplots(\n    1, 2, figsize=(16, 8),\n    subplot_kw={'projection': projection},\n    gridspec_kw={'bottom': 0.2}  # leave room for shared colorbar\n)\n\nmeshes = []\nfor ax, masked, title in zip(axes, [masked1, masked2], [\"3/25/2023 @ 01z\", \"3/25/2023 @ 02z\"]):\n    ax.set_extent([lon_min, lon_max, lat_min, lat_max], crs=ccrs.PlateCarree())\n    ax.add_feature(cfeature.STATES.with_scale('50m'), edgecolor='gray')\n    ax.add_feature(cfeature.BORDERS.with_scale('50m'), linestyle='--', edgecolor='black')\n    ax.add_feature(cfeature.COASTLINE.with_scale('50m'))\n    \n    mesh = ax.pcolormesh(\n        precip_1z.longitude, precip_1z.latitude, masked,\n        cmap='turbo', transform=ccrs.PlateCarree(), shading='auto'\n    )\n    ax.set_title(title, fontsize=14)\n    meshes.append(mesh)\n\n# Add shared colorbar beneath both plots\ncbar_ax = fig.add_axes([0.25, 0.1, 0.5, 0.02])  # [left, bottom, width, height]\ncbar = fig.colorbar(meshes[0], cax=cbar_ax, orientation='horizontal')\ncbar.set_label('Units')\nplt.suptitle('Instantaneous Precipitation:')\n\n# plt.tight_layout()\nplt.show()\n\n# MultiSensor_QPE_01H_Pass1_00.00\nQPE_1z = fetch_mrms_data('MultiSensor_QPE_01H_Pass1_00.00', '20230325', '01') # QPE: Quantified Precip Estimation - Offered hourly.\nQPE_2z = fetch_mrms_data('MultiSensor_QPE_01H_Pass1_00.00', '20230325', '02') \n\n\n# Define bounds for Dixie Alley\nlon_min, lon_max = -96, -80\nlat_min, lat_max = 29, 38\nprojection = ccrs.LambertConformal(central_longitude=-88, central_latitude=34)\n\n# Create side-by-side subplots\nfig, axes = plt.subplots(\n    1, 2, figsize=(16, 8),\n    subplot_kw={'projection': projection},\n    gridspec_kw={'bottom': 0.2}  # leave room for shared colorbar\n)\n\nmeshes = []\nfor ax, masked, title in zip(axes, [QPE_1z, QPE_2z], [\"3/25/2023 @ 01z\", \"3/25/2023 @ 02z\"]):\n    ax.set_extent([lon_min, lon_max, lat_min, lat_max], crs=ccrs.PlateCarree())\n    ax.add_feature(cfeature.STATES.with_scale('50m'), edgecolor='gray')\n    ax.add_feature(cfeature.BORDERS.with_scale('50m'), linestyle='--', edgecolor='black')\n    ax.add_feature(cfeature.COASTLINE.with_scale('50m'))\n    \n    mesh = ax.pcolormesh(\n        QPE_1z.longitude, QPE_1z.latitude, masked,\n        cmap='turbo', transform=ccrs.PlateCarree(), shading='auto'\n    )\n    ax.set_title(title, fontsize=14)\n    meshes.append(mesh)\n\n# Add shared colorbar beneath both plots\ncbar_ax = fig.add_axes([0.25, 0.1, 0.5, 0.02])  # [left, bottom, width, height]\ncbar = fig.colorbar(meshes[0], cax=cbar_ax, orientation='horizontal')\ncbar.set_label('Units')\nplt.suptitle('Multi-Sensor Quantified Estimated Precipitation:')\n\n# plt.tight_layout()\nplt.show()\n\n\n\n\n\n# RadarOnly_QPE_01H_00.00\n\n\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#every-2-minutes-to-show-a-difference-here-is-an-hour","position":15},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Rotation"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#rotation","position":16},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Rotation"},"content":"\n\n# MergedAzShear_0-2kmAGL_00.50\n# MergedAzShear_3-6kmAGL_00.50\n\n# RotationTrack30min_00.50\n# RotationTrack60min_00.50\n# RotationTrackML60min_00.50\n# RotationTrackML30min_00.50\n\n\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#rotation","position":17},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Hail Swaths"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#hail-swaths","position":18},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Hail Swaths"},"content":"\n\n# MESH - Maximum Expected Size of Hail\n# SHI_00.50 - Severe Hail Index\n# VII_00.50 - Vergically Integrated Ice\n# POSH_00.50\n\n\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#hail-swaths","position":19},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Storm Intensity - Vertically Integrated Liquid"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#storm-intensity-vertically-integrated-liquid","position":20},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Storm Intensity - Vertically Integrated Liquid"},"content":"\n\n# VIL_00.50\t\t\n# VIL_Density_00.50\t\t\t\n# VIL_Max_120min_00.50\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#storm-intensity-vertically-integrated-liquid","position":21},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"A content subsection","lvl2":"Storm Intensity - Vertically Integrated Liquid"},"type":"lvl3","url":"/notebooks/ch2-mar-2023-tornado-jdh#a-content-subsection","position":22},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"A content subsection","lvl2":"Storm Intensity - Vertically Integrated Liquid"},"content":"Divide and conquer your objectives with Markdown subsections, which will populate the helpful navbar in Jupyter Lab and here on the Jupyter Book!\n\n# some subsection code\na = [1, 2, 3, 4, 5]\n[i + 2 for i in a]\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#a-content-subsection","position":23},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"Another content subsection","lvl2":"Storm Intensity - Vertically Integrated Liquid"},"type":"lvl3","url":"/notebooks/ch2-mar-2023-tornado-jdh#another-content-subsection","position":24},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"Another content subsection","lvl2":"Storm Intensity - Vertically Integrated Liquid"},"content":"Keep up the good work! A note, try to avoid using code comments as narrative, and instead let them only exist as brief clarifications where necessary.\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#another-content-subsection","position":25},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Your second content section"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#your-second-content-section","position":26},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Your second content section"},"content":"Here we can move on to our second objective, and we can demonstrate...\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#your-second-content-section","position":27},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"type":"lvl3","url":"/notebooks/ch2-mar-2023-tornado-jdh#a-subsection-to-the-second-section","position":28},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"content":"","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#a-subsection-to-the-second-section","position":29},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"type":"lvl4","url":"/notebooks/ch2-mar-2023-tornado-jdh#a-quick-demonstration","position":30},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"content":"","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#a-quick-demonstration","position":31},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl5":"of further and further","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"type":"lvl5","url":"/notebooks/ch2-mar-2023-tornado-jdh#of-further-and-further","position":32},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl5":"of further and further","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"content":"","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#of-further-and-further","position":33},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl6":"header levels","lvl5":"of further and further","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"type":"lvl6","url":"/notebooks/ch2-mar-2023-tornado-jdh#header-levels","position":34},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl6":"header levels","lvl5":"of further and further","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"content":"\n\nas well as m = a * t / h text! Similarly, you have access to other \\LaTeX equation \n\nfunctionality via MathJax:\\begin{align}\n\\dot{x} & = \\sigma(y-x) \\\\\n\\dot{y} & = \\rho x - y - xz \\\\\n\\dot{z} & = -\\beta z + xy\n\\end{align}\n\nCheck out \n\nany number of helpful Markdown resources for further customizing your notebooks and the \n\nMyST Syntax Overview for MyST-specific formatting information. Don’t hesitate to ask questions if you have problems getting it to look just right.\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#header-levels","position":35},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Last Section"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#last-section","position":36},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Last Section"},"content":"You can add \n\nadmonitions using MyST syntax:\n\nNote\n\nYour relevant information here!\n\nSome other admonitions you can put in (\n\nthere are 10 total):\n\nHint\n\nA helpful hint.\n\nWarning\n\nBe careful!\n\nDanger\n\nScary stuff be here.\n\nWe also suggest checking out Jupyter Book’s \n\nbrief demonstration on adding cell tags to your cells in Jupyter Notebook, Lab, or manually. Using these cell tags can allow you to \n\ncustomize how your code content is displayed and even \n\ndemonstrate errors without altogether crashing our loyal army of machines!\n\n\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#last-section","position":37},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Summary"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#summary","position":38},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Summary"},"content":"Add one final --- marking the end of your body of content, and then conclude with a brief single paragraph summarizing at a high level the key pieces that were learned and how they tied to your objectives. Look to reiterate what the most important takeaways were.","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#summary","position":39},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"What’s next?","lvl2":"Summary"},"type":"lvl3","url":"/notebooks/ch2-mar-2023-tornado-jdh#whats-next","position":40},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl3":"What’s next?","lvl2":"Summary"},"content":"Let Jupyter book tie this to the next (sequential) piece of content that people could move on to down below and in the sidebar. However, if this page uniquely enables your reader to tackle other nonsequential concepts throughout this book, or even external content, link to it here!\n\n","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#whats-next","position":41},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Resources and references"},"type":"lvl2","url":"/notebooks/ch2-mar-2023-tornado-jdh#resources-and-references","position":42},{"hierarchy":{"lvl1":"Chapter 2: Case Study","lvl2":"Resources and references"},"content":"Finally, be rigorous in your citations and references as necessary. Give credit where credit is due. Also, feel free to link to relevant external material, further reading, documentation, etc. Then you’re done! Give yourself a quick review, a high five, and send us a pull request. A few final notes:\n\nKernel > Restart Kernel and Run All Cells... to confirm that your notebook will cleanly run from start to finish\n\nKernel > Restart Kernel and Clear All Outputs... before committing your notebook, our machines will do the heavy lifting\n\nTake credit! Provide author contact information if you’d like; if so, consider adding information here at the bottom of your notebook\n\nGive credit! Attribute appropriate authorship for referenced code, information, images, etc.\n\nOnly include what you’re legally allowed: no copyright infringement or plagiarism\n\nThank you for your contribution!","type":"content","url":"/notebooks/ch2-mar-2023-tornado-jdh#resources-and-references","position":43},{"hierarchy":{"lvl1":"Project Pythia Notebook Template"},"type":"lvl1","url":"/notebooks/ch3-txfloods","position":0},{"hierarchy":{"lvl1":"Project Pythia Notebook Template"},"content":"Let’s start here! If you can directly link to an image relevant to your notebook, such as \n\ncanonical logos, do so here at the top of your notebook. You can do this with MyST Markdown syntax, outlined in \n\nthis MyST guide, or you edit this cell to see a demonstration. Be sure to include alt text for any embedded images to make your content more accessible.\n\nNext, title your notebook appropriately with a top-level Markdown header, # (see the very first cell above). Do not use this level header anywhere else in the notebook. Our book build process will use this title in the navbar, table of contents, etc. Keep it short, keep it descriptive.\n\nFollow this with a --- cell to visually distinguish the transition to the prerequisites section.\n\n\n\n","type":"content","url":"/notebooks/ch3-txfloods","position":1},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Overview"},"type":"lvl2","url":"/notebooks/ch3-txfloods#overview","position":2},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Overview"},"content":"If you have an introductory paragraph, lead with it here! Keep it short and tied to your material, then be sure to continue into the required list of topics below,\n\nThis is a numbered list of the specific topics\n\nThese should map approximately to your main sections of content\n\nOr each second-level, ##, header in your notebook\n\nKeep the size and scope of your notebook in check\n\nAnd be sure to let the reader know up front the important concepts they’ll be leaving with\n\n","type":"content","url":"/notebooks/ch3-txfloods#overview","position":3},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Prerequisites"},"type":"lvl2","url":"/notebooks/ch3-txfloods#prerequisites","position":4},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Prerequisites"},"content":"This section was inspired by \n\nthis template of the wonderful \n\nThe Turing Way Jupyter Book.\n\nFollowing your overview, tell your reader what concepts, packages, or other background information they’ll need before learning your material. Tie this explicitly with links to other pages here in Foundations or to relevant external resources. Remove this body text, then populate the Markdown table, denoted in this cell with | vertical brackets, below, and fill out the information following. In this table, lay out prerequisite concepts by explicitly linking to other Foundations material or external resources, or describe generally helpful concepts.\n\nLabel the importance of each concept explicitly as helpful/necessary.\n\nConcepts\n\nImportance\n\nNotes\n\nIntro to Cartopy\n\nNecessary\n\n\n\nUnderstanding of NetCDF\n\nHelpful\n\nFamiliarity with metadata structure\n\nProject management\n\nHelpful\n\n\n\nTime to learn: estimate in minutes. For a rough idea, use 5 mins per subsection, 10 if longer; add these up for a total. Safer to round up and overestimate.\n\nSystem requirements:\n\nPopulate with any system, version, or non-Python software requirements if necessary\n\nOtherwise use the concepts table above and the Imports section below to describe required packages as necessary\n\nIf no extra requirements, remove the System requirements point altogether\n\n\n\n","type":"content","url":"/notebooks/ch3-txfloods#prerequisites","position":5},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Imports"},"type":"lvl2","url":"/notebooks/ch3-txfloods#imports","position":6},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Imports"},"content":"Begin your body of content with another --- divider before continuing into this section, then remove this body text and populate the following code cell with all necessary Python imports up-front:\n\n!conda install metpy -y -c conda-forge\n\nimport ipywidgets as widgets\nimport requests\nimport s3fs\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport xarray as xr\nimport datetime\nimport numpy.ma as ma\nfrom metpy.plots import ctables\nimport urllib.request\nimport gzip\nimport tempfile\n\n","type":"content","url":"/notebooks/ch3-txfloods#imports","position":7},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"MRMS Data"},"type":"lvl2","url":"/notebooks/ch3-txfloods#mrms-data","position":8},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"MRMS Data"},"content":"\n\n# Using MRMS Data to plot the low level composite reflectivity at 12Z in Central Texas\n\n","type":"content","url":"/notebooks/ch3-txfloods#mrms-data","position":9},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"Reading in MRMS Data","lvl2":"MRMS Data"},"type":"lvl3","url":"/notebooks/ch3-txfloods#reading-in-mrms-data","position":10},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"Reading in MRMS Data","lvl2":"MRMS Data"},"content":"\n\nresponse = urllib.request.urlopen(\"https://noaa-mrms-pds.s3.amazonaws.com/CONUS/LayerCompositeReflectivity_Low_00.50/20250704/MRMS_LayerCompositeReflectivity_Low_00.50_20250704-001040.grib2.gz\")\ncompressed_file = response.read()\n\nwith tempfile.NamedTemporaryFile(suffix=\".grib2\") as f:\n            f.write(gzip.decompress(compressed_file))\n            data_in = xr.load_dataarray(f.name, engine='cfgrib', decode_timedelta=True)\n\n","type":"content","url":"/notebooks/ch3-txfloods#reading-in-mrms-data","position":11},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Plotting Reflectivity over Texas at 12Z"},"type":"lvl2","url":"/notebooks/ch3-txfloods#plotting-reflectivity-over-texas-at-12z","position":12},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Plotting Reflectivity over Texas at 12Z"},"content":"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\nfrom metpy.plots import ctables\n\nrefl_norm, refl_cmap = ctables.registry.get_with_steps('NWSReflectivity', 5, 5)\n\n# 2. Extract coords & data\nlons = data_in.longitude.values\nlats = data_in.latitude.values\nrefl = data_in.values\n\n# If coords are 1D, make them 2D\nif lons.ndim == 1 and lats.ndim == 1:\n    lons, lats = np.meshgrid(lons, lats)\n\n# 3. Plot\nfig = plt.figure(figsize=(10, 8))\nax = plt.axes(projection=ccrs.PlateCarree())\nax.set_extent([-106, -93, 25, 36], crs=ccrs.PlateCarree())\n\nax.add_feature(cfeature.COASTLINE, linewidth=1)\nax.add_feature(cfeature.BORDERS, linewidth=1)\nax.add_feature(cfeature.STATES, linewidth=0.5)\n\nmesh = ax.pcolormesh(\n    lons, lats, ma.masked_where(refl<5,refl),\n    cmap=refl_cmap,\n    norm=refl_norm,\n    transform=ccrs.PlateCarree()\n)\n\ncb = plt.colorbar(mesh, ax=ax, orientation='horizontal', pad=0.05, aspect=50)\ncb.set_label('Reflectivity (dBZ)')\n\nplt.title('MRMS Layer Composite Reflectivity – Texas', fontsize=14)\nplt.show()\n\n\nma.masked_where(refl<5,refl)\n\n","type":"content","url":"/notebooks/ch3-txfloods#plotting-reflectivity-over-texas-at-12z","position":13},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"Animation of the Texas flood event using MRMS","lvl2":"Plotting Reflectivity over Texas at 12Z"},"type":"lvl3","url":"/notebooks/ch3-txfloods#animation-of-the-texas-flood-event-using-mrms","position":14},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"Animation of the Texas flood event using MRMS","lvl2":"Plotting Reflectivity over Texas at 12Z"},"content":"\n\n\n\n\n\n","type":"content","url":"/notebooks/ch3-txfloods#animation-of-the-texas-flood-event-using-mrms","position":15},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"A content subsection","lvl2":"Plotting Reflectivity over Texas at 12Z"},"type":"lvl3","url":"/notebooks/ch3-txfloods#a-content-subsection","position":16},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"A content subsection","lvl2":"Plotting Reflectivity over Texas at 12Z"},"content":"Divide and conquer your objectives with Markdown subsections, which will populate the helpful navbar in Jupyter Lab and here on the Jupyter Book!\n\n# some subsection code\na = [1, 2, 3, 4, 5]\n[i + 2 for i in a]\n\n","type":"content","url":"/notebooks/ch3-txfloods#a-content-subsection","position":17},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"Another content subsection","lvl2":"Plotting Reflectivity over Texas at 12Z"},"type":"lvl3","url":"/notebooks/ch3-txfloods#another-content-subsection","position":18},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"Another content subsection","lvl2":"Plotting Reflectivity over Texas at 12Z"},"content":"Keep up the good work! A note, try to avoid using code comments as narrative, and instead let them only exist as brief clarifications where necessary.\n\n","type":"content","url":"/notebooks/ch3-txfloods#another-content-subsection","position":19},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Your second content section"},"type":"lvl2","url":"/notebooks/ch3-txfloods#your-second-content-section","position":20},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Your second content section"},"content":"Here we can move on to our second objective, and we can demonstrate...\n\n","type":"content","url":"/notebooks/ch3-txfloods#your-second-content-section","position":21},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"type":"lvl3","url":"/notebooks/ch3-txfloods#a-subsection-to-the-second-section","position":22},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"content":"","type":"content","url":"/notebooks/ch3-txfloods#a-subsection-to-the-second-section","position":23},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"type":"lvl4","url":"/notebooks/ch3-txfloods#a-quick-demonstration","position":24},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"content":"","type":"content","url":"/notebooks/ch3-txfloods#a-quick-demonstration","position":25},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl5":"of further and further","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"type":"lvl5","url":"/notebooks/ch3-txfloods#of-further-and-further","position":26},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl5":"of further and further","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"content":"","type":"content","url":"/notebooks/ch3-txfloods#of-further-and-further","position":27},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl6":"header levels","lvl5":"of further and further","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"type":"lvl6","url":"/notebooks/ch3-txfloods#header-levels","position":28},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl6":"header levels","lvl5":"of further and further","lvl4":"a quick demonstration","lvl3":"A subsection to the second section","lvl2":"Your second content section"},"content":"\n\nas well as m = a * t / h text! Similarly, you have access to other \\LaTeX equation \n\nfunctionality via MathJax:\\begin{align}\n\\dot{x} & = \\sigma(y-x) \\\\\n\\dot{y} & = \\rho x - y - xz \\\\\n\\dot{z} & = -\\beta z + xy\n\\end{align}\n\nCheck out \n\nany number of helpful Markdown resources for further customizing your notebooks and the \n\nMyST Syntax Overview for MyST-specific formatting information. Don’t hesitate to ask questions if you have problems getting it to look just right.\n\n","type":"content","url":"/notebooks/ch3-txfloods#header-levels","position":29},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Last Section"},"type":"lvl2","url":"/notebooks/ch3-txfloods#last-section","position":30},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Last Section"},"content":"You can add \n\nadmonitions using MyST syntax:\n\nNote\n\nYour relevant information here!\n\nSome other admonitions you can put in (\n\nthere are 10 total):\n\nHint\n\nA helpful hint.\n\nWarning\n\nBe careful!\n\nDanger\n\nScary stuff be here.\n\nWe also suggest checking out Jupyter Book’s \n\nbrief demonstration on adding cell tags to your cells in Jupyter Notebook, Lab, or manually. Using these cell tags can allow you to \n\ncustomize how your code content is displayed and even \n\ndemonstrate errors without altogether crashing our loyal army of machines!\n\n\n\n","type":"content","url":"/notebooks/ch3-txfloods#last-section","position":31},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Summary"},"type":"lvl2","url":"/notebooks/ch3-txfloods#summary","position":32},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Summary"},"content":"Add one final --- marking the end of your body of content, and then conclude with a brief single paragraph summarizing at a high level the key pieces that were learned and how they tied to your objectives. Look to reiterate what the most important takeaways were.","type":"content","url":"/notebooks/ch3-txfloods#summary","position":33},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"What’s next?","lvl2":"Summary"},"type":"lvl3","url":"/notebooks/ch3-txfloods#whats-next","position":34},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl3":"What’s next?","lvl2":"Summary"},"content":"Let Jupyter book tie this to the next (sequential) piece of content that people could move on to down below and in the sidebar. However, if this page uniquely enables your reader to tackle other nonsequential concepts throughout this book, or even external content, link to it here!\n\n","type":"content","url":"/notebooks/ch3-txfloods#whats-next","position":35},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Resources and references"},"type":"lvl2","url":"/notebooks/ch3-txfloods#resources-and-references","position":36},{"hierarchy":{"lvl1":"Project Pythia Notebook Template","lvl2":"Resources and references"},"content":"Finally, be rigorous in your citations and references as necessary. Give credit where credit is due. Also, feel free to link to relevant external material, further reading, documentation, etc. Then you’re done! Give yourself a quick review, a high five, and send us a pull request. A few final notes:\n\nKernel > Restart Kernel and Run All Cells... to confirm that your notebook will cleanly run from start to finish\n\nKernel > Restart Kernel and Clear All Outputs... before committing your notebook, our machines will do the heavy lifting\n\nTake credit! Provide author contact information if you’d like; if so, consider adding information here at the bottom of your notebook\n\nGive credit! Attribute appropriate authorship for referenced code, information, images, etc.\n\nOnly include what you’re legally allowed: no copyright infringement or plagiarism\n\nThank you for your contribution!","type":"content","url":"/notebooks/ch3-txfloods#resources-and-references","position":37},{"hierarchy":{"lvl1":"Real-time MRMS Visualization"},"type":"lvl1","url":"/notebooks/ch4-realtimedata","position":0},{"hierarchy":{"lvl1":"Real-time MRMS Visualization"},"content":"","type":"content","url":"/notebooks/ch4-realtimedata","position":1},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Intent: This Project Pythia notebook allows a user to request and visualize near real-time Multi-Radar/Multi-Sensor System (MRMS) data from AWS S3."},"type":"lvl3","url":"/notebooks/ch4-realtimedata#intent-this-project-pythia-notebook-allows-a-user-to-request-and-visualize-near-real-time-multi-radar-multi-sensor-system-mrms-data-from-aws-s3","position":2},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Intent: This Project Pythia notebook allows a user to request and visualize near real-time Multi-Radar/Multi-Sensor System (MRMS) data from AWS S3."},"content":"","type":"content","url":"/notebooks/ch4-realtimedata#intent-this-project-pythia-notebook-allows-a-user-to-request-and-visualize-near-real-time-multi-radar-multi-sensor-system-mrms-data-from-aws-s3","position":3},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Audience: Anyone with at least 4GB (??????) of memory on their computer or computing environment and a fundamental knowledge of MRMS. No programming experience is required to go run this notebook, but it will help you understand where this data is coming from."},"type":"lvl3","url":"/notebooks/ch4-realtimedata#audience-anyone-with-at-least-4gb-of-memory-on-their-computer-or-computing-environment-and-a-fundamental-knowledge-of-mrms-no-programming-experience-is-required-to-go-run-this-notebook-but-it-will-help-you-understand-where-this-data-is-coming-from","position":4},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Audience: Anyone with at least 4GB (??????) of memory on their computer or computing environment and a fundamental knowledge of MRMS. No programming experience is required to go run this notebook, but it will help you understand where this data is coming from."},"content":"","type":"content","url":"/notebooks/ch4-realtimedata#audience-anyone-with-at-least-4gb-of-memory-on-their-computer-or-computing-environment-and-a-fundamental-knowledge-of-mrms-no-programming-experience-is-required-to-go-run-this-notebook-but-it-will-help-you-understand-where-this-data-is-coming-from","position":5},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Outcome: An interactive plot showing MRMS imagery from a selected region and radar product."},"type":"lvl3","url":"/notebooks/ch4-realtimedata#outcome-an-interactive-plot-showing-mrms-imagery-from-a-selected-region-and-radar-product","position":6},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Outcome: An interactive plot showing MRMS imagery from a selected region and radar product."},"content":"","type":"content","url":"/notebooks/ch4-realtimedata#outcome-an-interactive-plot-showing-mrms-imagery-from-a-selected-region-and-radar-product","position":7},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Time to Learn: 5 minutes."},"type":"lvl3","url":"/notebooks/ch4-realtimedata#time-to-learn-5-minutes","position":8},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Time to Learn: 5 minutes."},"content":"\n\n\n\n","type":"content","url":"/notebooks/ch4-realtimedata#time-to-learn-5-minutes","position":9},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Overview"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#overview","position":10},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Overview"},"content":"Here’s the road map for the notebook:\n\nLearn about MRMS\n\nImport required packages\n\nExplore near real-time MRMS data hosted on AWS\n\nSelect a region and product for viewing\n\nAccess selected MRMS data from AWS\n\nVisualize a selected variable using an interactive plot\n\n\n\n","type":"content","url":"/notebooks/ch4-realtimedata#overview","position":11},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"About MRMS"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#about-mrms","position":12},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"About MRMS"},"content":"\n\nThe Multi-Radar/Multi-Sensor System (MRMS) produces products for public infrastructure, weather forecasts and warnings, aviation, and numerical weather prediction. It provides high spatial (1-km) and temporal (2-min) resolution radar products at 31 vertical levels, and ingests data from numerous sources (including radar networks across the US and Canada, surface and upper air observations, lightning detection systems, satellite observations, and forecast models)\n\nchapter 1.\n\nFor more information, please refer to Chapter 1 of this project: \n\nLearning about MRMS.\n\n\n\n","type":"content","url":"/notebooks/ch4-realtimedata#about-mrms","position":13},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Imports"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#imports","position":14},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Imports"},"content":"\n\nHere are all required Python packages to run this code.\n\n# Packages required to request and open data from AWS S3\nimport s3fs\nimport urllib\nimport tempfile\nimport gzip\nimport xarray as xr\n\n# Packages required for user interface\nimport ipywidgets as widgets\n\n# Packages required for data visualization\nimport datetime\nfrom datetime import timezone\nimport numpy.ma as ma\nfrom metpy.plots import ctables\nimport numpy as np\nimport holoviews as hv\nimport pandas as pd\nimport hvplot.xarray \nimport matplotlib.colors as mcls\nfrom matplotlib.colors import Normalize\nhv.extension('bokeh')\n\n\n\n","type":"content","url":"/notebooks/ch4-realtimedata#imports","position":15},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"About AWS and NODD"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#about-aws-and-nodd","position":16},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"About AWS and NODD"},"content":"\n\nThe Amazon Web Services Simple Storage Service (AWS S3) is cloud-based object storage service. Through a public-private partnership with the National Oceanic and Atmospheric Administration (NOAA)'s Open Data Dissemination Program (NODD), NOAA is able to store multiple petabytes of open-access earth science data on AWS S3, including the MRMS dataset. This allows users to quickly and freely access MRMS data in real-time (with an update frequency of two minutes) without having to download the data to their personal systems.\n\nBecause of this partnership, we can access the data as an anonymous client -- no login required!\n\n# Initialize the S3 filesystem as anonymous\naws = s3fs.S3FileSystem(anon=True)\n\nYou can explore the S3 bucket that holds MRMS data to assess data availability and structure -- just visit \n\nthis link, which takes you to the MRMS bucket.\n\n# Here's a hint -- you can run aws.ls to see the file structure in code. Try it yourself!\n#aws.ls(f'noaa-mrms-pds/{location}/{product}/{datestring}/', refresh=True)  \n\n\n\n","type":"content","url":"/notebooks/ch4-realtimedata#about-aws-and-nodd","position":17},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Data selection"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#data-selection","position":18},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Data selection"},"content":"For ease of use, I’ve integrated ipywidgets (drop-down menus!) that allow you to make selections from AWS, and refined a selection of data variables as a demonstration. You can choose between 12-hour accumulated rainfall (with integrated rain gauge measurements), a merged reflectivitiy composite, and a model-derived surface temperature.\n\nNow, you have the option to select a region and a radar product to visualize in near real-time. Go ahead and use the drop-down menus to select a region, a radar product, then run the next cell. If you run the drop-down cell again, it will reset your values.\n\n# Formatting settings for drop-down menus\nstyle = {'description_width':'120px'}\nlayout = widgets.Layout(width='325px')  \n\n# Dropdown widget to choose location from the options on AWS\nlocation_choice = widgets.Dropdown(options=[(\"ALASKA\"),(\"CARIB\"),(\"CONUS\"),(\"GUAM\"),(\"HAWAII\")], description='Region:', style=style, layout=layout)\ndisplay(location_choice)\n\n# Dropdown widget to choose MRMS product from a selection of AWS products\nproduct_choice = widgets.Dropdown(options=[(\"LayerCompositeReflectivity_Low_00.50\"),(\"SATELLITE\"),(\"MODEL\")], description='MRMS product:', style=style, layout=layout)\ndisplay(product_choice)\n\nCongratulations, you’ve made your data selection!\n\nIf you choose to adapt this notebook to your own workflow, this section can easily be adjusted to your own use case. Simply delete the cell above, then update the cell below to reflect the region and data variable you wish to use. If you decide to use a product that is not covered in this notebook, you can search through \n\nall available data products on AWS and paste it in verbatim. It may be helpful to cross-reference these variables against the \n\nNSSL variable table and\n\n\nChapter 1.\n\n# Retrieve the user selection from 'region' \nlocation = location_choice.value\n\n# Retrieve the user selection from 'MRMS product'\nproduct = product_choice.value\n\n\n\n","type":"content","url":"/notebooks/ch4-realtimedata#data-selection","position":19},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Data request"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#data-request","position":20},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Data request"},"content":"Now that you’ve made your variable selection, it’s time to read in the data from AWS. First, we retrieve the current UTC datetime so that we can request files from today’s S3 bucket.\n\n# Retrieve the current datetime in UTC to know which bucket to query\nnow = datetime.datetime.now(datetime.UTC)\ndatestring = now.strftime('%Y%m%d')\n\nNext, we query the S3 bucket to make sure the data is available on AWS. If this section errors, reference \n\nthe S3 bucket to confirm that your requested region, date, and product exists and is entered correctly.\n\n# Query the S3 bucket for the available files that meet the criteria\ntry:\n    data_files = aws.ls(f'noaa-mrms-pds/{location}/{product}/{datestring}/', refresh=True)  \nexcept Exception as e:\n    print(f\"Error accessing S3 bucket: {e}\")\n    data_files = []\n\nFinally, we make the data request and read it in using xarray. This block of code finds the most recent file that fits your criteria, ensures that the file was created recently (within two hours), then makes the data request. Due to way the data was uploaded to S3, the file arrives as a compressed grib2 file. This code decompresses the file and reads it in using xarray, making the format more easily incorporated into our workflow.","type":"content","url":"/notebooks/ch4-realtimedata#data-request","position":21},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"am i gonna change this?? Finally, the code masks all invalid and missing values.","lvl2":"Data request"},"type":"lvl3","url":"/notebooks/ch4-realtimedata#am-i-gonna-change-this-finally-the-code-masks-all-invalid-and-missing-values","position":22},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"am i gonna change this?? Finally, the code masks all invalid and missing values.","lvl2":"Data request"},"content":"\n\nif data_files:\n    # Choose the last file from S3 for the most recent data\n    most_recent_file = data_files[-1]\n\n    # Check that the most recent file is within 2 hours of current time\n    timestamp_str = most_recent_file.split('_')[-1].replace('.grib2.gz', '')\n    dt = datetime.datetime.strptime(timestamp_str, \"%Y%m%d-%H%M%S\").replace(tzinfo=timezone.utc)\n    if abs((now - dt).total_seconds()) <= 120 * 60:\n        # Download file to memory, decompress from .gz, and read into xarray\n        try:\n            response = urllib.request.urlopen(f\"https://noaa-mrms-pds.s3.amazonaws.com/{most_recent_file[14:]}\")\n            compressed_file = response.read()\n\n            with tempfile.NamedTemporaryFile(suffix=\".grib2\") as f:\n                f.write(gzip.decompress(compressed_file))\n                f.flush()\n                data = xr.load_dataarray(f.name, engine=\"cfgrib\", decode_timedelta=True)\n        except Exception as e:\n            print(f\"Failed to process {product}: {e}\")\n        else:\n            # Mask invalid/missing values\n            vals = data.values\n            masked_vals = ma.masked_where(vals <= 0, vals)\n            data.close()\n\n\n\n","type":"content","url":"/notebooks/ch4-realtimedata#am-i-gonna-change-this-finally-the-code-masks-all-invalid-and-missing-values","position":23},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Visualization"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#visualization","position":24},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Visualization"},"content":"Now that we have the data read into memory using xarray, it is quite simple to plot. Here, we use hvplot to make an interactive visualization that allows the user to zoom in to a region of interest and mouse over values to better understand the product’s functionality over a specific region.\n\n# Get the NWS Reflectivity colormap and normalize range\nref_norm, ref_cmap = ctables.registry.get_with_steps('NWSReflectivity', 5, 5)\n\ndata = data.where(data > -50, np.nan)\n\n# Convert to hex colors for Bokeh (required by hvplot)\nnorm = Normalize(vmin=ref_norm.vmin, vmax=ref_norm.vmax)\nhex_cmap = [ref_cmap(norm(val)) for val in range(ref_norm.vmin, ref_norm.vmax + 5, 5)]\nhex_cmap = [mcls.to_hex(c) for c in hex_cmap]\n\n# Plot using hvplot\nreflectivity_plot = data.hvplot.image(\n    x=\"longitude\", y=\"latitude\",\n    cmap=hex_cmap,\n    colorbar=True,\n    geo=True, \n    tiles=True, \n    alpha=0.7,\n    clim=(ref_norm.vmin, ref_norm.vmax),\n    title=f\"MRMS Reflectivity - {pd.to_datetime(data.time.values).strftime('%b %d, %Y at %H:%M:%S')} UTC\",\n    frame_width=700,\n    frame_height=500,\n    xlabel='Longitude',\n    ylabel='Latitude',\n    tools=['hover']\n)\n\nreflectivity_plot\n\n\n\n\n","type":"content","url":"/notebooks/ch4-realtimedata#visualization","position":25},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Parting thoughts"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#parting-thoughts","position":26},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Parting thoughts"},"content":"Congratulations on the completion of this notebook! You have successfully selected a region and product, queried the AWS S3 bucket, and visualized MRMS data in near real-time.\n\nIf you’d like to continue this analysis, here are a couple of bonus challenges:\n\n","type":"content","url":"/notebooks/ch4-realtimedata#parting-thoughts","position":27},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Challenge (easy): Use the drop-down widgets in this notebook to plot a different project and region from your initial run!","lvl2":"Parting thoughts"},"type":"lvl3","url":"/notebooks/ch4-realtimedata#challenge-easy-use-the-drop-down-widgets-in-this-notebook-to-plot-a-different-project-and-region-from-your-initial-run","position":28},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Challenge (easy): Use the drop-down widgets in this notebook to plot a different project and region from your initial run!","lvl2":"Parting thoughts"},"content":"\n\n","type":"content","url":"/notebooks/ch4-realtimedata#challenge-easy-use-the-drop-down-widgets-in-this-notebook-to-plot-a-different-project-and-region-from-your-initial-run","position":29},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Challenge (medium): Delete the widget cell and use populate the notebook with a hard-coded “region” and “product” variable. Find a variable that was not covered in this notebook using the AWS S3 bucket.","lvl2":"Parting thoughts"},"type":"lvl3","url":"/notebooks/ch4-realtimedata#challenge-medium-delete-the-widget-cell-and-use-populate-the-notebook-with-a-hard-coded-region-and-product-variable-find-a-variable-that-was-not-covered-in-this-notebook-using-the-aws-s3-bucket","position":30},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Challenge (medium): Delete the widget cell and use populate the notebook with a hard-coded “region” and “product” variable. Find a variable that was not covered in this notebook using the AWS S3 bucket.","lvl2":"Parting thoughts"},"content":"Hint: Make sure to copy the variable names from the AWS Explorer exactly as you see them on screen, or your bucket access step will error.\nHint 2: The visualization step has the correct framework for a new product, but has been customized for the three examples in this notebook. Make sure to find a good color bar and reformat the name of your product to make a more beautiful plot.\n\n","type":"content","url":"/notebooks/ch4-realtimedata#challenge-medium-delete-the-widget-cell-and-use-populate-the-notebook-with-a-hard-coded-region-and-product-variable-find-a-variable-that-was-not-covered-in-this-notebook-using-the-aws-s3-bucket","position":31},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Challenge (difficult): Turn this notebook into a Python script, then use cron to create an updated plot from MRMS data every hour. Incorporate this plot into a web page, send it to your friend, or try it just for fun!","lvl2":"Parting thoughts"},"type":"lvl3","url":"/notebooks/ch4-realtimedata#challenge-difficult-turn-this-notebook-into-a-python-script-then-use-cron-to-create-an-updated-plot-from-mrms-data-every-hour-incorporate-this-plot-into-a-web-page-send-it-to-your-friend-or-try-it-just-for-fun","position":32},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl3":"Challenge (difficult): Turn this notebook into a Python script, then use cron to create an updated plot from MRMS data every hour. Incorporate this plot into a web page, send it to your friend, or try it just for fun!","lvl2":"Parting thoughts"},"content":"Hint: See the appendix for static plotting code to get you started.\n\n\n\n","type":"content","url":"/notebooks/ch4-realtimedata#challenge-difficult-turn-this-notebook-into-a-python-script-then-use-cron-to-create-an-updated-plot-from-mrms-data-every-hour-incorporate-this-plot-into-a-web-page-send-it-to-your-friend-or-try-it-just-for-fun","position":33},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Resources and references"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#resources-and-references","position":34},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Resources and references"},"content":"\n\nThings\n\nSecond things\n\n","type":"content","url":"/notebooks/ch4-realtimedata#resources-and-references","position":35},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Appendix"},"type":"lvl2","url":"/notebooks/ch4-realtimedata#appendix","position":36},{"hierarchy":{"lvl1":"Real-time MRMS Visualization","lvl2":"Appendix"},"content":"If you’d prefer to plot these data as a static plot, below is some sample code to kickstart your plotting journey.\n\n\"\"\"\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\n\ndef plot_product(product):\n    plt.clf()\n    \n    lons = data.longitude\n    lats = data.latitude\n    values = data.values\n    date = data.time.values\n\n    minLon = lons.min() \n    maxLon = lons.max()\n    minLat = lats.min()\n    maxLat = lats.max()\n\n    fig = plt.figure(figsize=(12,6), facecolor='w', edgecolor='k')\n    ax = fig.add_axes([0, 0, 1, 1], projection=ccrs.Mercator())\n    ax.set_extent([minLon, maxLon, minLat, maxLat], crs=ccrs.Geodetic())\n    \n    # Set colors\n    if product == \"LayerCompositeReflectivity_Low_00.50\":\n        ref_norm, ref_cmap = ctables.registry.get_with_steps('NWSReflectivity', 5, 5)\n        units = \"Reflectivity (dBZ)\"\n        title = \"MRMS Merged Reflectivity\"\n    elif product == \"GaugeInflIndex_12H_Pass1_00.00\":\n        ref_norm = None\n        ref_cmap = \"plasma\"\n        units = \"RhoHV\"\n        title = \"MRMS Gauge Infiltration Index\"\n    elif product == \"Model_SurfaceTemp_00.50\":\n        ref_norm = None\n        ref_cmap = \"viridis\"\n        units = \"ZDR (dBZ)\"\n        title = \"MRMS Merged Differential Reflectivity\"\n        \n    # Add Boundaries\n    ax.add_feature(cfeature.STATES, linewidth=0.25)\n\n    # Plot Data\n    radarplot = ax.pcolormesh(lons, lats, values, transform=ccrs.PlateCarree(), cmap=ref_cmap, norm=ref_norm)\n    cbar = plt.colorbar(radarplot)\n    cbar.set_label(units)\n\n    plt.title(f\"{title}\", loc='left', fontweight='bold')\n    #plt.title('{}'.format(pd.to_datetime(date).strftime('%d %B %Y at %H:%M UTC')), loc='right')\n\n    plt.show()\n\nplot_product('LayerCompositeReflectivity_Low_00.50')\n\"\"\"","type":"content","url":"/notebooks/ch4-realtimedata#appendix","position":37}]}
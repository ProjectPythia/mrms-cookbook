{"version":2,"kind":"Notebook","sha256":"a2115a15aa844a0eb3fb808101ec2cbe53ccfddd0ea8ae889cc0e13da3b0d056","slug":"notebooks.ch4-realtimedata","location":"/notebooks/ch4_realtimeData.ipynb","dependencies":[],"frontmatter":{"title":"Chapter 5: Real-time MRMS Visualization","content_includes_title":false,"authors":[{"nameParsed":{"literal":"Ty Janoski","given":"Ty","family":"Janoski"},"name":"Ty Janoski","orcid":"0000-0003-4344-355X","affiliations":["City College of New York and NOAA/OAR National Severe Storms Laboratory"],"id":"contributors-myst-generated-uid-0"},{"nameParsed":{"literal":"Mya Sears","given":"Mya","family":"Sears"},"name":"Mya Sears","orcid":"0009-0003-5870-7498","affiliations":["NSF National Center for Atmospheric Research"],"id":"contributors-myst-generated-uid-1"},{"nameParsed":{"literal":"Bella Condo","given":"Bella","family":"Condo"},"name":"Bella Condo","orcid":"0009-0000-0688-7077","affiliations":["University at Albany (State University of New York)"],"id":"contributors-myst-generated-uid-2"},{"nameParsed":{"literal":"JD Heaton","given":"JD","family":"Heaton"},"name":"JD Heaton","orcid":"0009-0005-7424-4889","affiliations":["Metropolitan State University of Denver"],"id":"contributors-myst-generated-uid-3"},{"nameParsed":{"literal":"MaKenna Collins","given":"MaKenna","family":"Collins"},"name":"MaKenna Collins","orcid":"0009-0003-5566-3370","affiliations":["Jackson State University"],"id":"contributors-myst-generated-uid-4"},{"nameParsed":{"literal":"Maxwell Grover","given":"Maxwell","family":"Grover"},"name":"Maxwell Grover","orcid":"0000-0002-0370-8974","affiliations":["Argonne National Laboratory"],"id":"contributors-myst-generated-uid-5"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/mrms-cookbook","copyright":"2025","affiliations":[{"id":"City College of New York and NOAA/OAR National Severe Storms Laboratory","name":"City College of New York and NOAA/OAR National Severe Storms Laboratory"},{"id":"NSF National Center for Atmospheric Research","name":"NSF National Center for Atmospheric Research"},{"id":"University at Albany (State University of New York)","name":"University at Albany (State University of New York)"},{"id":"Metropolitan State University of Denver","name":"Metropolitan State University of Denver"},{"id":"Jackson State University","name":"Jackson State University"},{"id":"Argonne National Laboratory","name":"Argonne National Laboratory"},{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"edit_url":"https://github.com/projectpythia/mrms-cookbook/blob/HEAD/notebooks/ch4_realtimeData.ipynb","thumbnail":"/mrms-cookbook/_preview/37/build/realtime_header-59bbfabe4061bea7d8ef1612d41e4a81.png","exports":[{"format":"ipynb","filename":"ch4_realtimeData.ipynb","url":"/mrms-cookbook/_preview/37/build/ch4_realtimeData-85f8220c1ae1bfacf14f8a50da2d3791.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"image","url":"/mrms-cookbook/_preview/37/build/realtime_header-59bbfabe4061bea7d8ef1612d41e4a81.png","alt":"MRMS Visualization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Pz56pPIN48","urlSource":"images/realtime_header.png"}],"key":"EVBiGAQgvB"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Welcome to the Real-time MRMS Visualization notebook! In this workflow, you will receive a quick briefing on the Multi-Radar/Multi-Sensor System (MRMS) content covered in ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RZxGodU8jZ"},{"type":"link","url":"chapter1.ipynb","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Chapter 1","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jzL2iuhs94"}],"urlSource":"chapter1.ipynb","key":"IDjxEtMn3n"},{"type":"text","value":", learn about data access from Amazom Web Services (AWS), make a selection of MRMS data to request from AWS, and visualize the latest radar data in an interactive plot.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"onfVofdQ53"}],"key":"G5VoLag5Og"}],"key":"DfbBpTwh5v"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Intent:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K8RNbOPcAK"}],"key":"gBbuPqMxMm"},{"type":"text","value":" This Project Pythia notebook allows a user to gain familiarity with the process of requesting real-time MRMS data from AWS S3 and provides the opportunity for further learning.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dxEYklBZIm"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BPcYhJzAa3"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Audience:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CGTIOLATsO"}],"key":"gRZWqUH7QN"},{"type":"text","value":" Anyone with at least 5GB of memory on their computer or computing environment and a fundamental knowledge of MRMS.   No programming experience is required to go run this notebook, but it will help you understand where this data is coming from.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EBXqTqRrCs"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yMyMaAYEHl"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Outcome:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SjRO0tKeW8"}],"key":"Ol7vyeJQwv"},{"type":"text","value":" An interactive plot showing MRMS imagery from a selected region and radar product.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qFIU1Gmy4H"},{"type":"break","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"izOU9iEeUd"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Time to Learn:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kSTtR5ZDb5"}],"key":"yF7uyNrU5e"},{"type":"text","value":" 15 minutes to run the notebook and read the documentation; 30 minutes to become familiar enough with the material to replicate these methods.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gYDoC2wrwa"}],"key":"K8WXcCneqm"}],"key":"pkY79A8oRX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VJ2dAArpiZ"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"QXEiTke4Sn"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Import required packages","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Ia1UBYXeuQ"}],"key":"mYDkd1ke2d"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Learn about MRMS","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YzrPIGFJE9"}],"key":"fcBELy7MVJ"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Explore near real-time MRMS data hosted on AWS","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"LaQ8z7wPwF"}],"key":"b8scvYjskt"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Select a region and product for viewing","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MwQ2wYqtg3"}],"key":"u5LYg3Gl7K"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Access selected MRMS data from AWS","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xin8dvDX12"}],"key":"L2QyycxZDb"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Visualize a selected variable using an interactive plot","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"hHcHJBUqPA"}],"key":"FcxSK6b492"}],"key":"XyFdll6U5H"}],"key":"GPWoXfK0hS"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LiXqHNsb1q"}],"key":"ztxfoIgQLK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yGrBxBqgky"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"KIcTWfdPaB"}],"key":"hdtmzLHABu"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here are all required Python packages to run this code.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Bynf16lU0j"}],"key":"o8fZqVfdmF"}],"key":"O6uB1PsNA0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Packages required to request and open data from AWS S3\nimport s3fs\nimport urllib\nimport tempfile\nimport gzip\nimport xarray as xr\n\n# Packages required for data visualization\nimport datetime\nfrom datetime import timezone\nimport numpy.ma as ma\nfrom metpy.plots import ctables\nimport numpy as np\nimport holoviews as hv\nimport pandas as pd\nimport panel as pn\nimport hvplot.xarray \nimport matplotlib.colors as mcls\nfrom matplotlib.colors import Normalize\n#pn.extension(\"bokeh\")\nhv.extension('bokeh')","key":"UNmKFwhTWZ"},{"type":"output","id":"7NnZ06ILKgYxqEmRGFgN3","data":[],"key":"JXB3aaqmK7"}],"key":"vG1GFdGZJs"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E37neprDM8"}],"key":"JSO5Hp8C67"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"About MRMS","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NYGfV1mr8F"}],"identifier":"about-mrms","label":"About MRMS","html_id":"about-mrms","implicit":true,"key":"aq0GvJdpQF"}],"key":"hDRTEAV19K"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"image","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lUzrMv2uOW"}],"key":"NFVQwNgjUc"}],"key":"y2OaiKJKpk"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The Multi-Radar/Multi-Sensor System (MRMS) produces products for public infrastructure, weather forecasts and warnings, aviation, and numerical weather prediction. It provides high spatial (1-km) and temporal (2-min) resolution radar products at 31 vertical levels, and ingests data from numerous sources (including radar networks across the US and Canada, surface and upper air observations, lightning detection systems, satellite observations, and forecast models)","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tdouo4ifAT"},{"type":"link","url":"https://www.nssl.noaa.gov/projects/mrms/","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"superscript","children":[{"type":"text","value":"1","key":"jEjDWQVX2U"}],"key":"HylWPAaqlV"}],"urlSource":"https://www.nssl.noaa.gov/projects/mrms/","key":"soRfoIzbkn"}],"key":"Fog3jJeoMA"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For more information, please refer to Chapter 1 of this project: ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"AwggAxlsOr"},{"type":"link","url":"ch1-aboutMRMS.ipynb","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Learning about MRMS","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"B54NgYqjjh"}],"urlSource":"ch1-aboutMRMS.ipynb","key":"IGflm76VAy"},{"type":"text","value":".","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ytnDX5sE2L"}],"key":"GTWqK6Kyjc"}],"key":"s8zAxuibbo"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LDykxm1llc"}],"key":"oi9NmX1Mv1"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"About AWS and NODD","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"o8INa7zhlB"}],"identifier":"about-aws-and-nodd","label":"About AWS and NODD","html_id":"about-aws-and-nodd","implicit":true,"key":"jjjEJNH2Wk"}],"key":"hBRG5MTMx9"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"logo images","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hJmo07XlC7"}],"key":"a9EwM3xQCb"}],"key":"COopwmzryX"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The Amazon Web Services Simple Storage Service (AWS S3) is cloud-based object storage service. Through a public-private partnership with the National Oceanic and Atmospheric Administration (NOAA)'s Open Data Dissemination Program (NODD), NOAA is able to store multiple petabytes of open-access earth science data on AWS S3, including the MRMS dataset. This allows users to quickly and freely access MRMS data in real-time (with an update frequency of two minutes) without having to download the data to their personal systems.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"c4iVKpyTuA"}],"key":"X62YQnBq0A"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Because of this partnership, we can access the data as an anonymous client -- no login required!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bLYpC4zMiy"}],"key":"cl0MeQqpAW"}],"key":"JEGHciXH2i"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Initialize the S3 filesystem as anonymous\naws = s3fs.S3FileSystem(anon=True)","key":"DB6Ycyj7rS"},{"type":"output","id":"AqNPDa35YQfPtcSgX4d8l","data":[],"key":"eaIVo0xbsd"}],"key":"EXviDFfB3o"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You can explore the S3 bucket that holds MRMS data to assess data availability and structure -- just visit ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TTLDocbnIw"},{"type":"link","url":"https://noaa-mrms-pds.s3.amazonaws.com/index.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"this link","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RHtPW7bWcL"}],"urlSource":"https://noaa-mrms-pds.s3.amazonaws.com/index.html","key":"ZI3LbevBsm"},{"type":"text","value":", which takes you to the MRMS bucket.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xPaCp5xxjk"}],"key":"sTkVJ21SE8"}],"key":"U2VMOnCiBn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Here's a hint -- you can run aws.ls to see the file structure in code. Try it yourself!\naws.ls(f'noaa-mrms-pds/CONUS/', refresh=True)[0:5]","key":"qVLBd7AkQw"},{"type":"output","id":"qyAfAlRy4CBn2F1sJPRBb","data":[],"key":"zjeFm7Oxz6"}],"key":"IQP8UINbTn"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Dx5py6AZrO"}],"key":"XjsPL7siKd"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data selection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FdTSoM93LJ"}],"identifier":"data-selection","label":"Data selection","html_id":"data-selection","implicit":true,"key":"EW4kJ0Dv0O"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"For ease of use, I’ve integrated ipywidgets (drop-down menus!) that allow you to make selections from AWS, and refined a selection of data variables as a demonstration. You can choose between the QC’d Merged Reflectivity Composite (the maximum reflectivity in a column, as a composite), a 12-hour multisensor QPE from Pass 1 (12h rainfall accumulation estimate, using data from multiple sensors), and the Probability of Severe Hail (probability of 0.75-inch diameter hail).","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rPcImrrsAu"}],"key":"N9Hf0PGJ0J"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Now, you have the option to select a region and a radar product to visualize in near real-time. Go ahead and use the drop-down menus to select a region, a radar product, then ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"odkFUTugVE"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"run the next cell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rGlat3W2sC"}],"key":"y06BupmcQp"},{"type":"text","value":". If you run the drop-down cell again, it will reset your values.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yUsHyl5Tga"}],"key":"kqfq3bvIhm"}],"key":"PYDjc9zTut"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Define dropdown options\nregion_options = [\"CONUS\", \"ALASKA\", \"CARIB\", \"GUAM\", \"HAWAII\"]\nproduct_options = [\n    \"MergedReflectivityQCComposite_00.50\",\n    \"MultiSensor_QPE_12H_Pass1_00.00\",\n    \"POSH_00.50\"\n]\n\n# Create the dropdowns with similar layout/formatting\nregion_choice = pn.widgets.Select(name='Region', options=region_options, width=325)\nproduct_choice = pn.widgets.Select(name='MRMS product', options=product_options, width=325)\n\n# Display the widgets together in a vertical layout (Column)\npn.Column(region_choice, product_choice)","key":"msCX12aN0Q"},{"type":"output","id":"k4u7RNTBdUXm391j30gwV","data":[],"key":"oiXgapV87j"}],"key":"HKyvtEjxxx"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Congratulations, you’ve made your data selection!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EOyEput8Nr"}],"key":"FjgYZF5PrO"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"If you choose to adapt this notebook to your own workflow, this section can easily be adjusted to your own use case. Simply delete the cell above, then update the cell below to reflect the region and data variable you wish to use. If you decide to use a product that is not covered in this notebook, you can search through ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UIIjhkR2I4"},{"type":"link","url":"https://noaa-mrms-pds.s3.amazonaws.com/index.html#CONUS/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"all available data products on AWS","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aGhELuGqu0"}],"urlSource":"https://noaa-mrms-pds.s3.amazonaws.com/index.html#CONUS/","key":"ItVciVIdWX"},{"type":"text","value":" and paste it in verbatim. It may be helpful to cross-reference these variables against the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ADbq8VnF4M"},{"type":"link","url":"https://www.nssl.noaa.gov/projects/mrms/operational/tables.php","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"NSSL variable table","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZErcazAgq0"}],"urlSource":"https://www.nssl.noaa.gov/projects/mrms/operational/tables.php","key":"IsXgZqZc4N"},{"type":"text","value":" and\n","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"elYbW7IAwW"},{"type":"link","url":"link_to_first_notebook.ipynb","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Chapter 1","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jonPwr01KU"}],"urlSource":"link_to_first_notebook.ipynb","key":"SKQh7UNnwa"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"deahGOud7l"}],"key":"pHIejDSIPr"}],"key":"PrDb4M4i4F"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Retrieve the user selection from 'region' \nregion = region_choice.value\n\n# Retrieve the user selection from 'MRMS product'\nproduct = product_choice.value\n\nprint(region, product)","key":"dsHFXWKTMP"},{"type":"output","id":"KF_62UsHe5iKnh1t8bdDZ","data":[],"key":"h4uZKp9wII"}],"key":"YEzOCej9Y7"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sHRSdjLwK8"}],"key":"AH52hDJrI5"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Data request","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"npo4MLaHXz"}],"identifier":"data-request","label":"Data request","html_id":"data-request","implicit":true,"key":"FcrBKssWq4"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that you’ve made your variable selection, it’s time to read in the data from AWS. First, we retrieve the current UTC datetime so that we can request files from today’s S3 bucket.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"hGvEJ9ODld"}],"key":"SEvj0BkH35"}],"key":"VW9pDdzrBz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Retrieve the current datetime in UTC to know which bucket to query\nnow = datetime.datetime.now(datetime.UTC)\ndatestring = now.strftime('%Y%m%d')","key":"rr8NQ67AWS"},{"type":"output","id":"uO62mO3wfEtkLV1ruagJp","data":[],"key":"hfn9fHF2PS"}],"key":"C9qDtkO5jY"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Next, we query the S3 bucket to make sure the data is available on AWS. If this section errors, reference ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UmT5iP3Zzm"},{"type":"link","url":"https://noaa-mrms-pds.s3.amazonaws.com/index.html#CONUS/","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"the S3","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Lm1xvp03RW"}],"urlSource":"https://noaa-mrms-pds.s3.amazonaws.com/index.html#CONUS/","key":"s6fmH0ToII"},{"type":"text","value":" bucket to confirm that your requested region, date, and product exists and is entered correctly.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dRu2vBnoLU"}],"key":"KWR4Kr3Ct1"}],"key":"u0UN5U6wVU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Query the S3 bucket for the available files that meet the criteria\ntry:\n    data_files = aws.ls(f'noaa-mrms-pds/{region}/{product}/{datestring}/', refresh=True)  \nexcept Exception as e:\n    print(f\"Error accessing S3 bucket: {e}\")\n    data_files = []","key":"VmcPjfvRGj"},{"type":"output","id":"kqNNZVFnETyPVNJUyrqJX","data":[],"key":"p3aLENaWpz"}],"key":"sGNMACh1eK"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Finally, we make the data request and read it in using xarray. This block of code finds the most recent file that fits your criteria, ensures that the file was created recently (within two hours), then makes the data request. Due to way the data was uploaded to S3, the file arrives as a compressed grib2 file. This code decompresses the file and reads it in using xarray, making the format more easily incorporated into our workflow.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A6tVSfpbCT"}],"key":"CiGEfQ2zkJ"}],"key":"ZFg91R000l"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"if data_files:\n    # Choose the last file from S3 for the most recent data\n    most_recent_file = data_files[-1]\n\n    # Check that the most recent file is within 2 hours of current time\n    timestamp_str = most_recent_file.split('_')[-1].replace('.grib2.gz', '')\n    dt = datetime.datetime.strptime(timestamp_str, \"%Y%m%d-%H%M%S\").replace(tzinfo=timezone.utc)\n    if abs((now - dt).total_seconds()) <= 120 * 60:\n        # Download file to memory, decompress from .gz, and read into xarray\n        try:\n            response = urllib.request.urlopen(f\"https://noaa-mrms-pds.s3.amazonaws.com/{most_recent_file[14:]}\")\n            compressed_file = response.read()\n\n            with tempfile.NamedTemporaryFile(suffix=\".grib2\") as f:\n                f.write(gzip.decompress(compressed_file))\n                f.flush()\n                data = xr.load_dataarray(f.name, engine=\"cfgrib\", decode_timedelta=True)\n        except Exception as e:\n            print(f\"Failed to process {product}: {e}\")","key":"fjKXh5UWps"},{"type":"output","id":"AwAYAgzZH57GJK33Su05t","data":[],"key":"Axe3zWYbBF"}],"key":"qjWJmC1K31"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"E6kDMrq2l4"}],"key":"eyTi5JyeMa"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualization","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"EQCOd8xH9c"}],"identifier":"visualization","label":"Visualization","html_id":"visualization","implicit":true,"key":"l8xvJuzx9z"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Now that we have the data read into memory using xarray, it is quite simple to plot. Here, we use hvplot to make an interactive visualization that allows the user to zoom in to a region of interest and mouse over values to better understand the product’s functionality over a specific region.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"LiNm2mVwD9"}],"key":"mu450wGAvS"}],"key":"PdzCjUhQ6A"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Mask data for neater visualization\ndata = data.where(data > 0, np.nan)\n\n# Get the NWS Reflectivity colormap and normalize range\nref_norm, ref_cmap = ctables.registry.get_with_steps('NWSReflectivity', 5, 5)\n\n# Convert to hex colors for Bokeh\nnorm = Normalize(vmin=ref_norm.vmin, vmax=ref_norm.vmax)\nhex_cmap = [ref_cmap(norm(val)) for val in range(ref_norm.vmin, ref_norm.vmax + 5, 5)]\nhex_cmap = [mcls.to_hex(c) for c in hex_cmap]\n\n# Plot using hvplot\nreflectivity_plot = data.hvplot.image(\n    x=\"longitude\", y=\"latitude\",\n    cmap=hex_cmap,\n    colorbar=True,\n    geo=True, \n    tiles=True, \n    alpha=0.7,\n    clim=(ref_norm.vmin, ref_norm.vmax),\n    title=f\"{product} - {pd.to_datetime(data.time.values).strftime('%b %d, %Y at %H:%M:%S')} UTC\",\n    frame_width=700,\n    frame_height=500,\n    xlabel='Longitude',\n    ylabel='Latitude',\n    tools=['hover']\n)\n\nreflectivity_plot","key":"KHgOO4mPBG"},{"type":"output","id":"sdvFkntEKAJTxHgFvXdA4","data":[],"key":"hkePyEDDnA"}],"key":"laPoeyQ880"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Above is your visualization! You can use the menu bar at the upper right side of the plot to pan around the plot, zoom in to a region of interest, and reset your selections to the default map. If you mouse over the values on the screen, you will see the latitude, longitude, and value associated with the selected product.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mpjLGgkBWm"}],"key":"tbSdYNdGEO"}],"key":"kfRbfvgUSB"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Parting thoughts","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tKCncaww3v"}],"identifier":"parting-thoughts","label":"Parting thoughts","html_id":"parting-thoughts","implicit":true,"key":"orJCOkMeO3"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Congratulations on the completion of this notebook! You have successfully selected a region and product, queried the AWS S3 bucket, and visualized MRMS data in near real-time.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"axEjBDijgU"}],"key":"r88ntfMl0c"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"If you’d like to continue this analysis, here are a couple of bonus challenges:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"WvhBujnW3O"}],"key":"XovulPpAyj"}],"key":"t102p1FnSv"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Challenge (easy): Use the drop-down widgets in this notebook to plot a different project and region from your initial run!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pqnoTXJj8P"}],"identifier":"challenge-easy-use-the-drop-down-widgets-in-this-notebook-to-plot-a-different-project-and-region-from-your-initial-run","label":"Challenge (easy): Use the drop-down widgets in this notebook to plot a different project and region from your initial run!","html_id":"challenge-easy-use-the-drop-down-widgets-in-this-notebook-to-plot-a-different-project-and-region-from-your-initial-run","implicit":true,"key":"bvd3jo9Iyv"}],"key":"hdFMHHxQ2N"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Challenge (medium): Delete the widget cell and use populate the notebook with a hard-coded “region” and “product” variable. Find a variable that was not covered in this notebook using the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TsESCg2mx4"},{"type":"link","url":"https://noaa-mrms-pds.s3.amazonaws.com/index.html","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"AWS S3 bucket","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JaKnGxmC05"}],"urlSource":"https://noaa-mrms-pds.s3.amazonaws.com/index.html","key":"jyLj45rrjQ"},{"type":"text","value":".","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W0wisP7Ama"}],"identifier":"challenge-medium-delete-the-widget-cell-and-use-populate-the-notebook-with-a-hard-coded-region-and-product-variable-find-a-variable-that-was-not-covered-in-this-notebook-using-the-aws-s3-bucket","label":"Challenge (medium): Delete the widget cell and use populate the notebook with a hard-coded “region” and “product” variable. Find a variable that was not covered in this notebook using the AWS S3 bucket.","html_id":"challenge-medium-delete-the-widget-cell-and-use-populate-the-notebook-with-a-hard-coded-region-and-product-variable-find-a-variable-that-was-not-covered-in-this-notebook-using-the-aws-s3-bucket","implicit":true,"key":"Qm5i0cG4HH"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Hint: Make sure to copy the variable names from the AWS Explorer ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jl9T64F2We"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"exactly","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"J4h79DgR0G"}],"key":"f396QfGfkP"},{"type":"text","value":" as you see them on screen, or your bucket access step will error.\nHint 2: The visualization step has the correct framework for a new product, but has been customized for the three examples in this notebook. Make sure to find a good color bar and reformat the name of your product to make a more beautiful plot.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RI80ulUz3H"}],"key":"NitpauTcew"}],"key":"FEY6YznVLZ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Challenge (difficult): Turn this notebook into a Python script, then use cron to create an updated plot from MRMS data every hour. Incorporate this plot into a web page, send it to your friend, or try it just for fun!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LvwKpILp4L"}],"identifier":"challenge-difficult-turn-this-notebook-into-a-python-script-then-use-cron-to-create-an-updated-plot-from-mrms-data-every-hour-incorporate-this-plot-into-a-web-page-send-it-to-your-friend-or-try-it-just-for-fun","label":"Challenge (difficult): Turn this notebook into a Python script, then use cron to create an updated plot from MRMS data every hour. Incorporate this plot into a web page, send it to your friend, or try it just for fun!","html_id":"challenge-difficult-turn-this-notebook-into-a-python-script-then-use-cron-to-create-an-updated-plot-from-mrms-data-every-hour-incorporate-this-plot-into-a-web-page-send-it-to-your-friend-or-try-it-just-for-fun","implicit":true,"key":"Bk3Z7a7f71"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Hint: See the appendix for static plotting code to get you started.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YL0BsCqI0R"}],"key":"BbqzNcLasW"}],"key":"VdSvz5JJfk"},{"type":"block","kind":"notebook-content","children":[{"type":"thematicBreak","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pHkHKrJBxJ"}],"key":"ajDhSjZAes"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Resources and references","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lIWHFev7I5"}],"identifier":"resources-and-references","label":"Resources and references","html_id":"resources-and-references","implicit":true,"key":"bPiOScJTY0"}],"key":"rkJjPpuscY"},{"type":"block","kind":"notebook-content","children":[{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Things","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"H3vy9D6CKa"}],"key":"kqnI5pGhG5"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Second things","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"kOR84enD76"}],"key":"Oty019qBEf"}],"key":"OPGfWAF3t2"}],"key":"GEhJFsOkZD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Appendix","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mK2zsBtB9y"}],"identifier":"appendix","label":"Appendix","html_id":"appendix","implicit":true,"key":"kTBozUbZ7S"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"If you’d prefer to plot these data as a static plot, below is some sample code to kickstart your plotting journey.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"LrujmjNeUN"}],"key":"vRX9o0b6at"}],"key":"Ap6M8VCfrx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"\"\"\"\nimport matplotlib.pyplot as plt\nimport cartopy.crs as ccrs\nimport cartopy.feature as cfeature\n    \nlons = data.longitude\nlats = data.latitude\nvalues = data.values\ndate = data.time.values\n\nminLon = lons.min() \nmaxLon = lons.max()\nminLat = lats.min()\nmaxLat = lats.max()\n\nfig = plt.figure(figsize=(12,6), facecolor='w', edgecolor='k')\nax = fig.add_axes([0, 0, 1, 1], projection=ccrs.Mercator())\nax.set_extent([minLon, maxLon, minLat, maxLat], crs=ccrs.Geodetic())\n\n# Set colors\nref_norm, ref_cmap = ctables.registry.get_with_steps('NWSReflectivity', 5, 5)\nunits = \"Reflectivity (dBZ)\"\ntitle = \"MRMS Merged Reflectivity\"\n\n# Add Boundaries\nax.add_feature(cfeature.STATES, linewidth=0.25)\n\n# Plot Data\nradarplot = ax.pcolormesh(lons, lats, values, transform=ccrs.PlateCarree(), cmap=ref_cmap, norm=ref_norm)\ncbar = plt.colorbar(radarplot)\ncbar.set_label(units)\n\nplt.title(f\"{title}\", loc='left', fontweight='bold')\n#plt.title('{}'.format(pd.to_datetime(date).strftime('%d %B %Y at %H:%M UTC')), loc='right')\n\nplt.show()\n\n\"\"\"","key":"NOFSx2SWS5"},{"type":"output","id":"9xYxfCmS60V9_Ek1kFtL-","data":[],"key":"DPPSaKx3LD"}],"key":"StPbVKoNyZ"}],"key":"lBDe2xHwBN"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"NOAA Multi-Radar / Multi-Sensor System (MRMS) at the BNF Field Site(s)","url":"/notebooks/bnf-mrms-qpe-hourly","group":"MRMS Cookbook"}}},"domain":"http://localhost:3000"}